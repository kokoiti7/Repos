//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GeneralInfo {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("AZUREDBDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class AZUREDBDataSet : global::System.Data.DataSet {
        
        private General_fleet_attachGroup1DataTable tableGeneral_fleet_attachGroup1;
        
        private General_Fleet_informationDataTable tableGeneral_Fleet_information;
        
        private Ship_Master_TBDataTable tableShip_Master_TB;
        
        private global::System.Data.DataRelation relationFK_General_fleet_attachGroup1_General_Fleet_information;
        
        private global::System.Data.DataRelation relationFK_General_Fleet_information_Ship_Master_TB;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public AZUREDBDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected AZUREDBDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["General_fleet_attachGroup1"] != null)) {
                    base.Tables.Add(new General_fleet_attachGroup1DataTable(ds.Tables["General_fleet_attachGroup1"]));
                }
                if ((ds.Tables["General_Fleet_information"] != null)) {
                    base.Tables.Add(new General_Fleet_informationDataTable(ds.Tables["General_Fleet_information"]));
                }
                if ((ds.Tables["Ship_Master_TB"] != null)) {
                    base.Tables.Add(new Ship_Master_TBDataTable(ds.Tables["Ship_Master_TB"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public General_fleet_attachGroup1DataTable General_fleet_attachGroup1 {
            get {
                return this.tableGeneral_fleet_attachGroup1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public General_Fleet_informationDataTable General_Fleet_information {
            get {
                return this.tableGeneral_Fleet_information;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Ship_Master_TBDataTable Ship_Master_TB {
            get {
                return this.tableShip_Master_TB;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            AZUREDBDataSet cln = ((AZUREDBDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["General_fleet_attachGroup1"] != null)) {
                    base.Tables.Add(new General_fleet_attachGroup1DataTable(ds.Tables["General_fleet_attachGroup1"]));
                }
                if ((ds.Tables["General_Fleet_information"] != null)) {
                    base.Tables.Add(new General_Fleet_informationDataTable(ds.Tables["General_Fleet_information"]));
                }
                if ((ds.Tables["Ship_Master_TB"] != null)) {
                    base.Tables.Add(new Ship_Master_TBDataTable(ds.Tables["Ship_Master_TB"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableGeneral_fleet_attachGroup1 = ((General_fleet_attachGroup1DataTable)(base.Tables["General_fleet_attachGroup1"]));
            if ((initTable == true)) {
                if ((this.tableGeneral_fleet_attachGroup1 != null)) {
                    this.tableGeneral_fleet_attachGroup1.InitVars();
                }
            }
            this.tableGeneral_Fleet_information = ((General_Fleet_informationDataTable)(base.Tables["General_Fleet_information"]));
            if ((initTable == true)) {
                if ((this.tableGeneral_Fleet_information != null)) {
                    this.tableGeneral_Fleet_information.InitVars();
                }
            }
            this.tableShip_Master_TB = ((Ship_Master_TBDataTable)(base.Tables["Ship_Master_TB"]));
            if ((initTable == true)) {
                if ((this.tableShip_Master_TB != null)) {
                    this.tableShip_Master_TB.InitVars();
                }
            }
            this.relationFK_General_fleet_attachGroup1_General_Fleet_information = this.Relations["FK_General_fleet_attachGroup1_General_Fleet_information"];
            this.relationFK_General_Fleet_information_Ship_Master_TB = this.Relations["FK_General_Fleet_information_Ship_Master_TB"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "AZUREDBDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/AZUREDBDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGeneral_fleet_attachGroup1 = new General_fleet_attachGroup1DataTable();
            base.Tables.Add(this.tableGeneral_fleet_attachGroup1);
            this.tableGeneral_Fleet_information = new General_Fleet_informationDataTable();
            base.Tables.Add(this.tableGeneral_Fleet_information);
            this.tableShip_Master_TB = new Ship_Master_TBDataTable();
            base.Tables.Add(this.tableShip_Master_TB);
            this.relationFK_General_fleet_attachGroup1_General_Fleet_information = new global::System.Data.DataRelation("FK_General_fleet_attachGroup1_General_Fleet_information", new global::System.Data.DataColumn[] {
                        this.tableGeneral_Fleet_information.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableGeneral_fleet_attachGroup1.GeneralinfoIDColumn}, false);
            this.Relations.Add(this.relationFK_General_fleet_attachGroup1_General_Fleet_information);
            this.relationFK_General_Fleet_information_Ship_Master_TB = new global::System.Data.DataRelation("FK_General_Fleet_information_Ship_Master_TB", new global::System.Data.DataColumn[] {
                        this.tableShip_Master_TB.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableGeneral_Fleet_information.IDColumn}, false);
            this.Relations.Add(this.relationFK_General_Fleet_information_Ship_Master_TB);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeGeneral_fleet_attachGroup1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeGeneral_Fleet_information() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeShip_Master_TB() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            AZUREDBDataSet ds = new AZUREDBDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void General_fleet_attachGroup1RowChangeEventHandler(object sender, General_fleet_attachGroup1RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void General_Fleet_informationRowChangeEventHandler(object sender, General_Fleet_informationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void Ship_Master_TBRowChangeEventHandler(object sender, Ship_Master_TBRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class General_fleet_attachGroup1DataTable : global::System.Data.TypedTableBase<General_fleet_attachGroup1Row> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnGeneralinfoID;
            
            private global::System.Data.DataColumn columnFilename;
            
            private global::System.Data.DataColumn columnFilepath;
            
            private global::System.Data.DataColumn columnUpdated;
            
            private global::System.Data.DataColumn columnRemark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public General_fleet_attachGroup1DataTable() {
                this.TableName = "General_fleet_attachGroup1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal General_fleet_attachGroup1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected General_fleet_attachGroup1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GeneralinfoIDColumn {
                get {
                    return this.columnGeneralinfoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FilenameColumn {
                get {
                    return this.columnFilename;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FilepathColumn {
                get {
                    return this.columnFilepath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UpdatedColumn {
                get {
                    return this.columnUpdated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public General_fleet_attachGroup1Row this[int index] {
                get {
                    return ((General_fleet_attachGroup1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event General_fleet_attachGroup1RowChangeEventHandler General_fleet_attachGroup1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event General_fleet_attachGroup1RowChangeEventHandler General_fleet_attachGroup1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event General_fleet_attachGroup1RowChangeEventHandler General_fleet_attachGroup1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event General_fleet_attachGroup1RowChangeEventHandler General_fleet_attachGroup1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddGeneral_fleet_attachGroup1Row(General_fleet_attachGroup1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public General_fleet_attachGroup1Row AddGeneral_fleet_attachGroup1Row(General_Fleet_informationRow parentGeneral_Fleet_informationRowByFK_General_fleet_attachGroup1_General_Fleet_information, string Filename, string Filepath, string Updated, string Remark) {
                General_fleet_attachGroup1Row rowGeneral_fleet_attachGroup1Row = ((General_fleet_attachGroup1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Filename,
                        Filepath,
                        Updated,
                        Remark};
                if ((parentGeneral_Fleet_informationRowByFK_General_fleet_attachGroup1_General_Fleet_information != null)) {
                    columnValuesArray[1] = parentGeneral_Fleet_informationRowByFK_General_fleet_attachGroup1_General_Fleet_information[0];
                }
                rowGeneral_fleet_attachGroup1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowGeneral_fleet_attachGroup1Row);
                return rowGeneral_fleet_attachGroup1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public General_fleet_attachGroup1Row FindByID(int ID) {
                return ((General_fleet_attachGroup1Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                General_fleet_attachGroup1DataTable cln = ((General_fleet_attachGroup1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new General_fleet_attachGroup1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnGeneralinfoID = base.Columns["GeneralinfoID"];
                this.columnFilename = base.Columns["Filename"];
                this.columnFilepath = base.Columns["Filepath"];
                this.columnUpdated = base.Columns["Updated"];
                this.columnRemark = base.Columns["Remark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnGeneralinfoID = new global::System.Data.DataColumn("GeneralinfoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralinfoID);
                this.columnFilename = new global::System.Data.DataColumn("Filename", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilename);
                this.columnFilepath = new global::System.Data.DataColumn("Filepath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilepath);
                this.columnUpdated = new global::System.Data.DataColumn("Updated", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdated);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnFilename.MaxLength = 2147483647;
                this.columnFilepath.MaxLength = 2147483647;
                this.columnUpdated.MaxLength = 2147483647;
                this.columnRemark.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public General_fleet_attachGroup1Row NewGeneral_fleet_attachGroup1Row() {
                return ((General_fleet_attachGroup1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new General_fleet_attachGroup1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(General_fleet_attachGroup1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.General_fleet_attachGroup1RowChanged != null)) {
                    this.General_fleet_attachGroup1RowChanged(this, new General_fleet_attachGroup1RowChangeEvent(((General_fleet_attachGroup1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.General_fleet_attachGroup1RowChanging != null)) {
                    this.General_fleet_attachGroup1RowChanging(this, new General_fleet_attachGroup1RowChangeEvent(((General_fleet_attachGroup1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.General_fleet_attachGroup1RowDeleted != null)) {
                    this.General_fleet_attachGroup1RowDeleted(this, new General_fleet_attachGroup1RowChangeEvent(((General_fleet_attachGroup1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.General_fleet_attachGroup1RowDeleting != null)) {
                    this.General_fleet_attachGroup1RowDeleting(this, new General_fleet_attachGroup1RowChangeEvent(((General_fleet_attachGroup1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveGeneral_fleet_attachGroup1Row(General_fleet_attachGroup1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AZUREDBDataSet ds = new AZUREDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "General_fleet_attachGroup1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class General_Fleet_informationDataTable : global::System.Data.TypedTableBase<General_Fleet_informationRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnVESSEL_NAME;
            
            private global::System.Data.DataColumn columnProp_shaft_draw;
            
            private global::System.Data.DataColumn columnNxt_Nxt_Dock;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnIOPPC_renewal_due;
            
            private global::System.Data.DataColumn columnUSCG_postponed_until;
            
            private global::System.Data.DataColumn columnUSCG_due_date;
            
            private global::System.Data.DataColumn _columnBallast_water_capacity_m3_;
            
            private global::System.Data.DataColumn columnPumps;
            
            private global::System.Data.DataColumn columnPump_capacity;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnVSL_CODE;
            
            private global::System.Data.DataColumn columnSMC_TYPE;
            
            private global::System.Data.DataColumn columnCLASS;
            
            private global::System.Data.DataColumn columnSHIPYARD;
            
            private global::System.Data.DataColumn columnSHIP_NO;
            
            private global::System.Data.DataColumn columnLENGTH;
            
            private global::System.Data.DataColumn columnBREATH;
            
            private global::System.Data.DataColumn columnDRAFT;
            
            private global::System.Data.DataColumn columnNET_TON;
            
            private global::System.Data.DataColumn columnDEAD_WEIGHT;
            
            private global::System.Data.DataColumn columnKEEL_LAID;
            
            private global::System.Data.DataColumn columnDELIVERY_DATE;
            
            private global::System.Data.DataColumn columnAGE;
            
            private global::System.Data.DataColumn columnTRADE;
            
            private global::System.Data.DataColumn columnCREW;
            
            private global::System.Data.DataColumn columnNATIONALITY;
            
            private global::System.Data.DataColumn columnIMO_NO;
            
            private global::System.Data.DataColumn columnGRT;
            
            private global::System.Data.DataColumn columnDelivery;
            
            private global::System.Data.DataColumn columnFlag;
            
            private global::System.Data.DataColumn columnME_Maker;
            
            private global::System.Data.DataColumn columnME_Type;
            
            private global::System.Data.DataColumn columnME_Output;
            
            private global::System.Data.DataColumn columnMETC_Type;
            
            private global::System.Data.DataColumn columnDE_Maeker;
            
            private global::System.Data.DataColumn columnDE_Type;
            
            private global::System.Data.DataColumn columnDE_No;
            
            private global::System.Data.DataColumn columnDE_Output;
            
            private global::System.Data.DataColumn columnDETC_Type;
            
            private global::System.Data.DataColumn columnGEN_Maker;
            
            private global::System.Data.DataColumn columnGEN_Capacity;
            
            private global::System.Data.DataColumn columnGEN_lubrication;
            
            private global::System.Data.DataColumn columnGEN_Lub_oil;
            
            private global::System.Data.DataColumn columnGEN_lub_qty;
            
            private global::System.Data.DataColumn columnAB_Maker;
            
            private global::System.Data.DataColumn columnAB_Type;
            
            private global::System.Data.DataColumn columnAB_Capacity;
            
            private global::System.Data.DataColumn columnBurner_Maker;
            
            private global::System.Data.DataColumn columnBuner_Type;
            
            private global::System.Data.DataColumn columnBuner_FO_consumpt;
            
            private global::System.Data.DataColumn columnAB_Boiler_Water;
            
            private global::System.Data.DataColumn columnCharterer;
            
            private global::System.Data.DataColumn columnCharterPeriod;
            
            private global::System.Data.DataColumn columnBoilerSurvay;
            
            private global::System.Data.DataColumn columnCraneLoadTest;
            
            private global::System.Data.DataColumn columnCraneAnnual;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public General_Fleet_informationDataTable() {
                this.TableName = "General_Fleet_information";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal General_Fleet_informationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected General_Fleet_informationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VESSEL_NAMEColumn {
                get {
                    return this.columnVESSEL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Prop_shaft_drawColumn {
                get {
                    return this.columnProp_shaft_draw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Nxt_Nxt_DockColumn {
                get {
                    return this.columnNxt_Nxt_Dock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IOPPC_renewal_dueColumn {
                get {
                    return this.columnIOPPC_renewal_due;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn USCG_postponed_untilColumn {
                get {
                    return this.columnUSCG_postponed_until;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn USCG_due_dateColumn {
                get {
                    return this.columnUSCG_due_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn _Ballast_water_capacity_m3_Column {
                get {
                    return this._columnBallast_water_capacity_m3_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PumpsColumn {
                get {
                    return this.columnPumps;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Pump_capacityColumn {
                get {
                    return this.columnPump_capacity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VSL_CODEColumn {
                get {
                    return this.columnVSL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SMC_TYPEColumn {
                get {
                    return this.columnSMC_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CLASSColumn {
                get {
                    return this.columnCLASS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SHIPYARDColumn {
                get {
                    return this.columnSHIPYARD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SHIP_NOColumn {
                get {
                    return this.columnSHIP_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LENGTHColumn {
                get {
                    return this.columnLENGTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BREATHColumn {
                get {
                    return this.columnBREATH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DRAFTColumn {
                get {
                    return this.columnDRAFT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NET_TONColumn {
                get {
                    return this.columnNET_TON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DEAD_WEIGHTColumn {
                get {
                    return this.columnDEAD_WEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KEEL_LAIDColumn {
                get {
                    return this.columnKEEL_LAID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DELIVERY_DATEColumn {
                get {
                    return this.columnDELIVERY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AGEColumn {
                get {
                    return this.columnAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TRADEColumn {
                get {
                    return this.columnTRADE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CREWColumn {
                get {
                    return this.columnCREW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NATIONALITYColumn {
                get {
                    return this.columnNATIONALITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IMO_NOColumn {
                get {
                    return this.columnIMO_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GRTColumn {
                get {
                    return this.columnGRT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DeliveryColumn {
                get {
                    return this.columnDelivery;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FlagColumn {
                get {
                    return this.columnFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ME_MakerColumn {
                get {
                    return this.columnME_Maker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ME_TypeColumn {
                get {
                    return this.columnME_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ME_OutputColumn {
                get {
                    return this.columnME_Output;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn METC_TypeColumn {
                get {
                    return this.columnMETC_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DE_MaekerColumn {
                get {
                    return this.columnDE_Maeker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DE_TypeColumn {
                get {
                    return this.columnDE_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DE_NoColumn {
                get {
                    return this.columnDE_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DE_OutputColumn {
                get {
                    return this.columnDE_Output;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DETC_TypeColumn {
                get {
                    return this.columnDETC_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GEN_MakerColumn {
                get {
                    return this.columnGEN_Maker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GEN_CapacityColumn {
                get {
                    return this.columnGEN_Capacity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GEN_lubricationColumn {
                get {
                    return this.columnGEN_lubrication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GEN_Lub_oilColumn {
                get {
                    return this.columnGEN_Lub_oil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GEN_lub_qtyColumn {
                get {
                    return this.columnGEN_lub_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AB_MakerColumn {
                get {
                    return this.columnAB_Maker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AB_TypeColumn {
                get {
                    return this.columnAB_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AB_CapacityColumn {
                get {
                    return this.columnAB_Capacity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Burner_MakerColumn {
                get {
                    return this.columnBurner_Maker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Buner_TypeColumn {
                get {
                    return this.columnBuner_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Buner_FO_consumptColumn {
                get {
                    return this.columnBuner_FO_consumpt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AB_Boiler_WaterColumn {
                get {
                    return this.columnAB_Boiler_Water;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ChartererColumn {
                get {
                    return this.columnCharterer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CharterPeriodColumn {
                get {
                    return this.columnCharterPeriod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BoilerSurvayColumn {
                get {
                    return this.columnBoilerSurvay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CraneLoadTestColumn {
                get {
                    return this.columnCraneLoadTest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CraneAnnualColumn {
                get {
                    return this.columnCraneAnnual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public General_Fleet_informationRow this[int index] {
                get {
                    return ((General_Fleet_informationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event General_Fleet_informationRowChangeEventHandler General_Fleet_informationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event General_Fleet_informationRowChangeEventHandler General_Fleet_informationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event General_Fleet_informationRowChangeEventHandler General_Fleet_informationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event General_Fleet_informationRowChangeEventHandler General_Fleet_informationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddGeneral_Fleet_informationRow(General_Fleet_informationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public General_Fleet_informationRow AddGeneral_Fleet_informationRow(
                        string VESSEL_NAME, 
                        System.DateTime Prop_shaft_draw, 
                        System.DateTime Nxt_Nxt_Dock, 
                        string Type, 
                        System.DateTime IOPPC_renewal_due, 
                        System.DateTime USCG_postponed_until, 
                        System.DateTime USCG_due_date, 
                        decimal _Ballast_water_capacity_m3_, 
                        string Pumps, 
                        string Pump_capacity, 
                        string Remarks, 
                        string VSL_CODE, 
                        string SMC_TYPE, 
                        string CLASS, 
                        string SHIPYARD, 
                        string SHIP_NO, 
                        string LENGTH, 
                        string BREATH, 
                        string DRAFT, 
                        string NET_TON, 
                        string DEAD_WEIGHT, 
                        string KEEL_LAID, 
                        string DELIVERY_DATE, 
                        string AGE, 
                        string TRADE, 
                        string CREW, 
                        string NATIONALITY, 
                        string IMO_NO, 
                        string GRT, 
                        string Delivery, 
                        string Flag, 
                        string ME_Maker, 
                        string ME_Type, 
                        string ME_Output, 
                        string METC_Type, 
                        string DE_Maeker, 
                        string DE_Type, 
                        string DE_No, 
                        string DE_Output, 
                        string DETC_Type, 
                        string GEN_Maker, 
                        string GEN_Capacity, 
                        string GEN_lubrication, 
                        string GEN_Lub_oil, 
                        string GEN_lub_qty, 
                        string AB_Maker, 
                        string AB_Type, 
                        string AB_Capacity, 
                        string Burner_Maker, 
                        string Buner_Type, 
                        string Buner_FO_consumpt, 
                        string AB_Boiler_Water, 
                        string Charterer, 
                        string CharterPeriod, 
                        System.DateTime BoilerSurvay, 
                        System.DateTime CraneLoadTest, 
                        System.DateTime CraneAnnual) {
                General_Fleet_informationRow rowGeneral_Fleet_informationRow = ((General_Fleet_informationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        VESSEL_NAME,
                        Prop_shaft_draw,
                        Nxt_Nxt_Dock,
                        Type,
                        IOPPC_renewal_due,
                        USCG_postponed_until,
                        USCG_due_date,
                        _Ballast_water_capacity_m3_,
                        Pumps,
                        Pump_capacity,
                        Remarks,
                        VSL_CODE,
                        SMC_TYPE,
                        CLASS,
                        SHIPYARD,
                        SHIP_NO,
                        LENGTH,
                        BREATH,
                        DRAFT,
                        NET_TON,
                        DEAD_WEIGHT,
                        KEEL_LAID,
                        DELIVERY_DATE,
                        AGE,
                        TRADE,
                        CREW,
                        NATIONALITY,
                        IMO_NO,
                        GRT,
                        Delivery,
                        Flag,
                        ME_Maker,
                        ME_Type,
                        ME_Output,
                        METC_Type,
                        DE_Maeker,
                        DE_Type,
                        DE_No,
                        DE_Output,
                        DETC_Type,
                        GEN_Maker,
                        GEN_Capacity,
                        GEN_lubrication,
                        GEN_Lub_oil,
                        GEN_lub_qty,
                        AB_Maker,
                        AB_Type,
                        AB_Capacity,
                        Burner_Maker,
                        Buner_Type,
                        Buner_FO_consumpt,
                        AB_Boiler_Water,
                        Charterer,
                        CharterPeriod,
                        BoilerSurvay,
                        CraneLoadTest,
                        CraneAnnual};
                rowGeneral_Fleet_informationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGeneral_Fleet_informationRow);
                return rowGeneral_Fleet_informationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public General_Fleet_informationRow FindByID(int ID) {
                return ((General_Fleet_informationRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                General_Fleet_informationDataTable cln = ((General_Fleet_informationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new General_Fleet_informationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnVESSEL_NAME = base.Columns["VESSEL NAME"];
                this.columnProp_shaft_draw = base.Columns["Prop shaft draw"];
                this.columnNxt_Nxt_Dock = base.Columns["Nxt Nxt Dock"];
                this.columnType = base.Columns["Type"];
                this.columnIOPPC_renewal_due = base.Columns["IOPPC renewal due"];
                this.columnUSCG_postponed_until = base.Columns["USCG postponed until"];
                this.columnUSCG_due_date = base.Columns["USCG due date"];
                this._columnBallast_water_capacity_m3_ = base.Columns["Ballast water capacity(m3)"];
                this.columnPumps = base.Columns["Pumps"];
                this.columnPump_capacity = base.Columns["Pump capacity"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnVSL_CODE = base.Columns["VSL CODE"];
                this.columnSMC_TYPE = base.Columns["SMC TYPE"];
                this.columnCLASS = base.Columns["CLASS"];
                this.columnSHIPYARD = base.Columns["SHIPYARD"];
                this.columnSHIP_NO = base.Columns["SHIP NO"];
                this.columnLENGTH = base.Columns["LENGTH"];
                this.columnBREATH = base.Columns["BREATH"];
                this.columnDRAFT = base.Columns["DRAFT"];
                this.columnNET_TON = base.Columns["NET TON"];
                this.columnDEAD_WEIGHT = base.Columns["DEAD WEIGHT"];
                this.columnKEEL_LAID = base.Columns["KEEL LAID"];
                this.columnDELIVERY_DATE = base.Columns["DELIVERY DATE"];
                this.columnAGE = base.Columns["AGE"];
                this.columnTRADE = base.Columns["TRADE"];
                this.columnCREW = base.Columns["CREW"];
                this.columnNATIONALITY = base.Columns["NATIONALITY"];
                this.columnIMO_NO = base.Columns["IMO NO"];
                this.columnGRT = base.Columns["GRT"];
                this.columnDelivery = base.Columns["Delivery"];
                this.columnFlag = base.Columns["Flag"];
                this.columnME_Maker = base.Columns["ME Maker"];
                this.columnME_Type = base.Columns["ME Type"];
                this.columnME_Output = base.Columns["ME Output"];
                this.columnMETC_Type = base.Columns["METC Type"];
                this.columnDE_Maeker = base.Columns["DE Maeker"];
                this.columnDE_Type = base.Columns["DE Type"];
                this.columnDE_No = base.Columns["DE No"];
                this.columnDE_Output = base.Columns["DE Output"];
                this.columnDETC_Type = base.Columns["DETC Type"];
                this.columnGEN_Maker = base.Columns["GEN Maker"];
                this.columnGEN_Capacity = base.Columns["GEN Capacity"];
                this.columnGEN_lubrication = base.Columns["GEN lubrication"];
                this.columnGEN_Lub_oil = base.Columns["GEN Lub oil"];
                this.columnGEN_lub_qty = base.Columns["GEN lub qty"];
                this.columnAB_Maker = base.Columns["AB Maker"];
                this.columnAB_Type = base.Columns["AB Type"];
                this.columnAB_Capacity = base.Columns["AB Capacity"];
                this.columnBurner_Maker = base.Columns["Burner Maker"];
                this.columnBuner_Type = base.Columns["Buner Type"];
                this.columnBuner_FO_consumpt = base.Columns["Buner FO consumpt"];
                this.columnAB_Boiler_Water = base.Columns["AB Boiler Water"];
                this.columnCharterer = base.Columns["Charterer"];
                this.columnCharterPeriod = base.Columns["CharterPeriod"];
                this.columnBoilerSurvay = base.Columns["BoilerSurvay"];
                this.columnCraneLoadTest = base.Columns["CraneLoadTest"];
                this.columnCraneAnnual = base.Columns["CraneAnnual"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnVESSEL_NAME = new global::System.Data.DataColumn("VESSEL NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVESSEL_NAME);
                this.columnProp_shaft_draw = new global::System.Data.DataColumn("Prop shaft draw", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProp_shaft_draw);
                this.columnNxt_Nxt_Dock = new global::System.Data.DataColumn("Nxt Nxt Dock", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNxt_Nxt_Dock);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnIOPPC_renewal_due = new global::System.Data.DataColumn("IOPPC renewal due", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIOPPC_renewal_due);
                this.columnUSCG_postponed_until = new global::System.Data.DataColumn("USCG postponed until", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSCG_postponed_until);
                this.columnUSCG_due_date = new global::System.Data.DataColumn("USCG due date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSCG_due_date);
                this._columnBallast_water_capacity_m3_ = new global::System.Data.DataColumn("Ballast water capacity(m3)", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnBallast_water_capacity_m3_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnBallast_water_capacity_m3_");
                this._columnBallast_water_capacity_m3_.ExtendedProperties.Add("Generator_UserColumnName", "Ballast water capacity(m3)");
                base.Columns.Add(this._columnBallast_water_capacity_m3_);
                this.columnPumps = new global::System.Data.DataColumn("Pumps", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPumps);
                this.columnPump_capacity = new global::System.Data.DataColumn("Pump capacity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPump_capacity);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnVSL_CODE = new global::System.Data.DataColumn("VSL CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVSL_CODE);
                this.columnSMC_TYPE = new global::System.Data.DataColumn("SMC TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMC_TYPE);
                this.columnCLASS = new global::System.Data.DataColumn("CLASS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLASS);
                this.columnSHIPYARD = new global::System.Data.DataColumn("SHIPYARD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIPYARD);
                this.columnSHIP_NO = new global::System.Data.DataColumn("SHIP NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_NO);
                this.columnLENGTH = new global::System.Data.DataColumn("LENGTH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLENGTH);
                this.columnBREATH = new global::System.Data.DataColumn("BREATH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBREATH);
                this.columnDRAFT = new global::System.Data.DataColumn("DRAFT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRAFT);
                this.columnNET_TON = new global::System.Data.DataColumn("NET TON", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNET_TON);
                this.columnDEAD_WEIGHT = new global::System.Data.DataColumn("DEAD WEIGHT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEAD_WEIGHT);
                this.columnKEEL_LAID = new global::System.Data.DataColumn("KEEL LAID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEEL_LAID);
                this.columnDELIVERY_DATE = new global::System.Data.DataColumn("DELIVERY DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDELIVERY_DATE);
                this.columnAGE = new global::System.Data.DataColumn("AGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAGE);
                this.columnTRADE = new global::System.Data.DataColumn("TRADE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRADE);
                this.columnCREW = new global::System.Data.DataColumn("CREW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREW);
                this.columnNATIONALITY = new global::System.Data.DataColumn("NATIONALITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNATIONALITY);
                this.columnIMO_NO = new global::System.Data.DataColumn("IMO NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMO_NO);
                this.columnGRT = new global::System.Data.DataColumn("GRT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRT);
                this.columnDelivery = new global::System.Data.DataColumn("Delivery", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelivery);
                this.columnFlag = new global::System.Data.DataColumn("Flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlag);
                this.columnME_Maker = new global::System.Data.DataColumn("ME Maker", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnME_Maker);
                this.columnME_Type = new global::System.Data.DataColumn("ME Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnME_Type);
                this.columnME_Output = new global::System.Data.DataColumn("ME Output", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnME_Output);
                this.columnMETC_Type = new global::System.Data.DataColumn("METC Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMETC_Type);
                this.columnDE_Maeker = new global::System.Data.DataColumn("DE Maeker", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDE_Maeker);
                this.columnDE_Type = new global::System.Data.DataColumn("DE Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDE_Type);
                this.columnDE_No = new global::System.Data.DataColumn("DE No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDE_No);
                this.columnDE_Output = new global::System.Data.DataColumn("DE Output", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDE_Output);
                this.columnDETC_Type = new global::System.Data.DataColumn("DETC Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDETC_Type);
                this.columnGEN_Maker = new global::System.Data.DataColumn("GEN Maker", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGEN_Maker);
                this.columnGEN_Capacity = new global::System.Data.DataColumn("GEN Capacity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGEN_Capacity);
                this.columnGEN_lubrication = new global::System.Data.DataColumn("GEN lubrication", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGEN_lubrication);
                this.columnGEN_Lub_oil = new global::System.Data.DataColumn("GEN Lub oil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGEN_Lub_oil);
                this.columnGEN_lub_qty = new global::System.Data.DataColumn("GEN lub qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGEN_lub_qty);
                this.columnAB_Maker = new global::System.Data.DataColumn("AB Maker", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAB_Maker);
                this.columnAB_Type = new global::System.Data.DataColumn("AB Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAB_Type);
                this.columnAB_Capacity = new global::System.Data.DataColumn("AB Capacity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAB_Capacity);
                this.columnBurner_Maker = new global::System.Data.DataColumn("Burner Maker", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBurner_Maker);
                this.columnBuner_Type = new global::System.Data.DataColumn("Buner Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuner_Type);
                this.columnBuner_FO_consumpt = new global::System.Data.DataColumn("Buner FO consumpt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuner_FO_consumpt);
                this.columnAB_Boiler_Water = new global::System.Data.DataColumn("AB Boiler Water", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAB_Boiler_Water);
                this.columnCharterer = new global::System.Data.DataColumn("Charterer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCharterer);
                this.columnCharterPeriod = new global::System.Data.DataColumn("CharterPeriod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCharterPeriod);
                this.columnBoilerSurvay = new global::System.Data.DataColumn("BoilerSurvay", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoilerSurvay);
                this.columnCraneLoadTest = new global::System.Data.DataColumn("CraneLoadTest", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCraneLoadTest);
                this.columnCraneAnnual = new global::System.Data.DataColumn("CraneAnnual", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCraneAnnual);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnVESSEL_NAME.MaxLength = 50;
                this.columnType.MaxLength = 2147483647;
                this.columnPumps.MaxLength = 2147483647;
                this.columnPump_capacity.MaxLength = 2147483647;
                this.columnRemarks.MaxLength = 2147483647;
                this.columnVSL_CODE.MaxLength = 2147483647;
                this.columnSMC_TYPE.MaxLength = 2147483647;
                this.columnCLASS.MaxLength = 2147483647;
                this.columnSHIPYARD.MaxLength = 2147483647;
                this.columnSHIP_NO.MaxLength = 2147483647;
                this.columnLENGTH.MaxLength = 2147483647;
                this.columnBREATH.MaxLength = 2147483647;
                this.columnDRAFT.MaxLength = 2147483647;
                this.columnNET_TON.MaxLength = 2147483647;
                this.columnDEAD_WEIGHT.MaxLength = 2147483647;
                this.columnKEEL_LAID.MaxLength = 2147483647;
                this.columnDELIVERY_DATE.MaxLength = 2147483647;
                this.columnAGE.MaxLength = 2147483647;
                this.columnTRADE.MaxLength = 2147483647;
                this.columnCREW.MaxLength = 2147483647;
                this.columnNATIONALITY.MaxLength = 2147483647;
                this.columnIMO_NO.MaxLength = 2147483647;
                this.columnGRT.MaxLength = 2147483647;
                this.columnDelivery.MaxLength = 2147483647;
                this.columnFlag.MaxLength = 2147483647;
                this.columnME_Maker.MaxLength = 2147483647;
                this.columnME_Type.MaxLength = 2147483647;
                this.columnME_Output.MaxLength = 2147483647;
                this.columnMETC_Type.MaxLength = 2147483647;
                this.columnDE_Maeker.MaxLength = 2147483647;
                this.columnDE_Type.MaxLength = 2147483647;
                this.columnDE_No.MaxLength = 2147483647;
                this.columnDE_Output.MaxLength = 2147483647;
                this.columnDETC_Type.MaxLength = 2147483647;
                this.columnGEN_Maker.MaxLength = 2147483647;
                this.columnGEN_Capacity.MaxLength = 2147483647;
                this.columnGEN_lubrication.MaxLength = 2147483647;
                this.columnGEN_Lub_oil.MaxLength = 2147483647;
                this.columnGEN_lub_qty.MaxLength = 2147483647;
                this.columnAB_Maker.MaxLength = 2147483647;
                this.columnAB_Type.MaxLength = 2147483647;
                this.columnAB_Capacity.MaxLength = 2147483647;
                this.columnBurner_Maker.MaxLength = 2147483647;
                this.columnBuner_Type.MaxLength = 2147483647;
                this.columnBuner_FO_consumpt.MaxLength = 2147483647;
                this.columnAB_Boiler_Water.MaxLength = 2147483647;
                this.columnCharterer.MaxLength = 50;
                this.columnCharterPeriod.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public General_Fleet_informationRow NewGeneral_Fleet_informationRow() {
                return ((General_Fleet_informationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new General_Fleet_informationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(General_Fleet_informationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.General_Fleet_informationRowChanged != null)) {
                    this.General_Fleet_informationRowChanged(this, new General_Fleet_informationRowChangeEvent(((General_Fleet_informationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.General_Fleet_informationRowChanging != null)) {
                    this.General_Fleet_informationRowChanging(this, new General_Fleet_informationRowChangeEvent(((General_Fleet_informationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.General_Fleet_informationRowDeleted != null)) {
                    this.General_Fleet_informationRowDeleted(this, new General_Fleet_informationRowChangeEvent(((General_Fleet_informationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.General_Fleet_informationRowDeleting != null)) {
                    this.General_Fleet_informationRowDeleting(this, new General_Fleet_informationRowChangeEvent(((General_Fleet_informationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveGeneral_Fleet_informationRow(General_Fleet_informationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AZUREDBDataSet ds = new AZUREDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "General_Fleet_informationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Ship_Master_TBDataTable : global::System.Data.TypedTableBase<Ship_Master_TBRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnOwnerGroup;
            
            private global::System.Data.DataColumn columnPresentName;
            
            private global::System.Data.DataColumn columnShortcharacter;
            
            private global::System.Data.DataColumn columnIMONumber;
            
            private global::System.Data.DataColumn columnFBBtelephone;
            
            private global::System.Data.DataColumn columnFBBtelephoneShort;
            
            private global::System.Data.DataColumn columnFBBfacsimile;
            
            private global::System.Data.DataColumn columnInmFtelephone1;
            
            private global::System.Data.DataColumn columnInmFtelephone2;
            
            private global::System.Data.DataColumn columnInmFfacsimile;
            
            private global::System.Data.DataColumn columnInmCSATmail1;
            
            private global::System.Data.DataColumn columnInmCSATmail2;
            
            private global::System.Data.DataColumn columnemail1;
            
            private global::System.Data.DataColumn columnemail2;
            
            private global::System.Data.DataColumn columnLastUpdateforContacts;
            
            private global::System.Data.DataColumn columnPreviousName;
            
            private global::System.Data.DataColumn columnExOwner;
            
            private global::System.Data.DataColumn columnBuilder;
            
            private global::System.Data.DataColumn columnBuldersShipNumber;
            
            private global::System.Data.DataColumn columnBuildYear;
            
            private global::System.Data.DataColumn columnFlag;
            
            private global::System.Data.DataColumn columnClassification;
            
            private global::System.Data.DataColumn columnTYPE;
            
            private global::System.Data.DataColumn columnLoA;
            
            private global::System.Data.DataColumn columnBTH;
            
            private global::System.Data.DataColumn columnDWT;
            
            private global::System.Data.DataColumn columnSold;
            
            private global::System.Data.DataColumn columnPROwner;
            
            private global::System.Data.DataColumn columnOwner;
            
            private global::System.Data.DataColumn columnPhotofilename1;
            
            private global::System.Data.DataColumn columnPhotofilename2;
            
            private global::System.Data.DataColumn columnPICID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ship_Master_TBDataTable() {
                this.TableName = "Ship_Master_TB";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal Ship_Master_TBDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected Ship_Master_TBDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OwnerGroupColumn {
                get {
                    return this.columnOwnerGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PresentNameColumn {
                get {
                    return this.columnPresentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ShortcharacterColumn {
                get {
                    return this.columnShortcharacter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IMONumberColumn {
                get {
                    return this.columnIMONumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FBBtelephoneColumn {
                get {
                    return this.columnFBBtelephone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FBBtelephoneShortColumn {
                get {
                    return this.columnFBBtelephoneShort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FBBfacsimileColumn {
                get {
                    return this.columnFBBfacsimile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InmFtelephone1Column {
                get {
                    return this.columnInmFtelephone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InmFtelephone2Column {
                get {
                    return this.columnInmFtelephone2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InmFfacsimileColumn {
                get {
                    return this.columnInmFfacsimile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InmCSATmail1Column {
                get {
                    return this.columnInmCSATmail1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InmCSATmail2Column {
                get {
                    return this.columnInmCSATmail2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn email1Column {
                get {
                    return this.columnemail1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn email2Column {
                get {
                    return this.columnemail2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LastUpdateforContactsColumn {
                get {
                    return this.columnLastUpdateforContacts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PreviousNameColumn {
                get {
                    return this.columnPreviousName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ExOwnerColumn {
                get {
                    return this.columnExOwner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BuilderColumn {
                get {
                    return this.columnBuilder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BuldersShipNumberColumn {
                get {
                    return this.columnBuldersShipNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BuildYearColumn {
                get {
                    return this.columnBuildYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FlagColumn {
                get {
                    return this.columnFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClassificationColumn {
                get {
                    return this.columnClassification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TYPEColumn {
                get {
                    return this.columnTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LoAColumn {
                get {
                    return this.columnLoA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BTHColumn {
                get {
                    return this.columnBTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DWTColumn {
                get {
                    return this.columnDWT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SoldColumn {
                get {
                    return this.columnSold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PROwnerColumn {
                get {
                    return this.columnPROwner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OwnerColumn {
                get {
                    return this.columnOwner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Photofilename1Column {
                get {
                    return this.columnPhotofilename1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Photofilename2Column {
                get {
                    return this.columnPhotofilename2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PICIDColumn {
                get {
                    return this.columnPICID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ship_Master_TBRow this[int index] {
                get {
                    return ((Ship_Master_TBRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Ship_Master_TBRowChangeEventHandler Ship_Master_TBRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Ship_Master_TBRowChangeEventHandler Ship_Master_TBRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Ship_Master_TBRowChangeEventHandler Ship_Master_TBRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Ship_Master_TBRowChangeEventHandler Ship_Master_TBRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddShip_Master_TBRow(Ship_Master_TBRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ship_Master_TBRow AddShip_Master_TBRow(
                        int ID, 
                        int OwnerGroup, 
                        string PresentName, 
                        string Shortcharacter, 
                        string IMONumber, 
                        string FBBtelephone, 
                        string FBBtelephoneShort, 
                        string FBBfacsimile, 
                        string InmFtelephone1, 
                        string InmFtelephone2, 
                        string InmFfacsimile, 
                        string InmCSATmail1, 
                        string InmCSATmail2, 
                        string email1, 
                        string email2, 
                        string LastUpdateforContacts, 
                        string PreviousName, 
                        string ExOwner, 
                        string Builder, 
                        string BuldersShipNumber, 
                        System.DateTime BuildYear, 
                        string Flag, 
                        string Classification, 
                        string TYPE, 
                        string LoA, 
                        string BTH, 
                        string DWT, 
                        string Sold, 
                        string PROwner, 
                        string Owner, 
                        string Photofilename1, 
                        string Photofilename2, 
                        int PICID) {
                Ship_Master_TBRow rowShip_Master_TBRow = ((Ship_Master_TBRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        OwnerGroup,
                        PresentName,
                        Shortcharacter,
                        IMONumber,
                        FBBtelephone,
                        FBBtelephoneShort,
                        FBBfacsimile,
                        InmFtelephone1,
                        InmFtelephone2,
                        InmFfacsimile,
                        InmCSATmail1,
                        InmCSATmail2,
                        email1,
                        email2,
                        LastUpdateforContacts,
                        PreviousName,
                        ExOwner,
                        Builder,
                        BuldersShipNumber,
                        BuildYear,
                        Flag,
                        Classification,
                        TYPE,
                        LoA,
                        BTH,
                        DWT,
                        Sold,
                        PROwner,
                        Owner,
                        Photofilename1,
                        Photofilename2,
                        PICID};
                rowShip_Master_TBRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowShip_Master_TBRow);
                return rowShip_Master_TBRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ship_Master_TBRow FindByID(int ID) {
                return ((Ship_Master_TBRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Ship_Master_TBDataTable cln = ((Ship_Master_TBDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Ship_Master_TBDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnOwnerGroup = base.Columns["OwnerGroup"];
                this.columnPresentName = base.Columns["PresentName"];
                this.columnShortcharacter = base.Columns["Shortcharacter"];
                this.columnIMONumber = base.Columns["IMONumber"];
                this.columnFBBtelephone = base.Columns["FBBtelephone"];
                this.columnFBBtelephoneShort = base.Columns["FBBtelephoneShort"];
                this.columnFBBfacsimile = base.Columns["FBBfacsimile"];
                this.columnInmFtelephone1 = base.Columns["InmFtelephone1"];
                this.columnInmFtelephone2 = base.Columns["InmFtelephone2"];
                this.columnInmFfacsimile = base.Columns["InmFfacsimile"];
                this.columnInmCSATmail1 = base.Columns["InmCSATmail1"];
                this.columnInmCSATmail2 = base.Columns["InmCSATmail2"];
                this.columnemail1 = base.Columns["email1"];
                this.columnemail2 = base.Columns["email2"];
                this.columnLastUpdateforContacts = base.Columns["LastUpdateforContacts"];
                this.columnPreviousName = base.Columns["PreviousName"];
                this.columnExOwner = base.Columns["ExOwner"];
                this.columnBuilder = base.Columns["Builder"];
                this.columnBuldersShipNumber = base.Columns["BuldersShipNumber"];
                this.columnBuildYear = base.Columns["BuildYear"];
                this.columnFlag = base.Columns["Flag"];
                this.columnClassification = base.Columns["Classification"];
                this.columnTYPE = base.Columns["TYPE"];
                this.columnLoA = base.Columns["LoA"];
                this.columnBTH = base.Columns["BTH"];
                this.columnDWT = base.Columns["DWT"];
                this.columnSold = base.Columns["Sold"];
                this.columnPROwner = base.Columns["PROwner"];
                this.columnOwner = base.Columns["Owner"];
                this.columnPhotofilename1 = base.Columns["Photofilename1"];
                this.columnPhotofilename2 = base.Columns["Photofilename2"];
                this.columnPICID = base.Columns["PICID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnOwnerGroup = new global::System.Data.DataColumn("OwnerGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerGroup);
                this.columnPresentName = new global::System.Data.DataColumn("PresentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPresentName);
                this.columnShortcharacter = new global::System.Data.DataColumn("Shortcharacter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortcharacter);
                this.columnIMONumber = new global::System.Data.DataColumn("IMONumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMONumber);
                this.columnFBBtelephone = new global::System.Data.DataColumn("FBBtelephone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFBBtelephone);
                this.columnFBBtelephoneShort = new global::System.Data.DataColumn("FBBtelephoneShort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFBBtelephoneShort);
                this.columnFBBfacsimile = new global::System.Data.DataColumn("FBBfacsimile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFBBfacsimile);
                this.columnInmFtelephone1 = new global::System.Data.DataColumn("InmFtelephone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInmFtelephone1);
                this.columnInmFtelephone2 = new global::System.Data.DataColumn("InmFtelephone2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInmFtelephone2);
                this.columnInmFfacsimile = new global::System.Data.DataColumn("InmFfacsimile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInmFfacsimile);
                this.columnInmCSATmail1 = new global::System.Data.DataColumn("InmCSATmail1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInmCSATmail1);
                this.columnInmCSATmail2 = new global::System.Data.DataColumn("InmCSATmail2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInmCSATmail2);
                this.columnemail1 = new global::System.Data.DataColumn("email1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail1);
                this.columnemail2 = new global::System.Data.DataColumn("email2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail2);
                this.columnLastUpdateforContacts = new global::System.Data.DataColumn("LastUpdateforContacts", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdateforContacts);
                this.columnPreviousName = new global::System.Data.DataColumn("PreviousName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousName);
                this.columnExOwner = new global::System.Data.DataColumn("ExOwner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExOwner);
                this.columnBuilder = new global::System.Data.DataColumn("Builder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuilder);
                this.columnBuldersShipNumber = new global::System.Data.DataColumn("BuldersShipNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuldersShipNumber);
                this.columnBuildYear = new global::System.Data.DataColumn("BuildYear", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildYear);
                this.columnFlag = new global::System.Data.DataColumn("Flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlag);
                this.columnClassification = new global::System.Data.DataColumn("Classification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassification);
                this.columnTYPE = new global::System.Data.DataColumn("TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE);
                this.columnLoA = new global::System.Data.DataColumn("LoA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoA);
                this.columnBTH = new global::System.Data.DataColumn("BTH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBTH);
                this.columnDWT = new global::System.Data.DataColumn("DWT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDWT);
                this.columnSold = new global::System.Data.DataColumn("Sold", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSold);
                this.columnPROwner = new global::System.Data.DataColumn("PROwner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROwner);
                this.columnOwner = new global::System.Data.DataColumn("Owner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwner);
                this.columnPhotofilename1 = new global::System.Data.DataColumn("Photofilename1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhotofilename1);
                this.columnPhotofilename2 = new global::System.Data.DataColumn("Photofilename2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhotofilename2);
                this.columnPICID = new global::System.Data.DataColumn("PICID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPICID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnPresentName.MaxLength = 50;
                this.columnShortcharacter.MaxLength = 255;
                this.columnIMONumber.MaxLength = 255;
                this.columnFBBtelephone.MaxLength = 50;
                this.columnFBBtelephoneShort.MaxLength = 50;
                this.columnFBBfacsimile.MaxLength = 50;
                this.columnInmFtelephone1.MaxLength = 50;
                this.columnInmFtelephone2.MaxLength = 50;
                this.columnInmFfacsimile.MaxLength = 50;
                this.columnInmCSATmail1.MaxLength = 50;
                this.columnInmCSATmail2.MaxLength = 50;
                this.columnemail1.MaxLength = 50;
                this.columnemail2.MaxLength = 50;
                this.columnLastUpdateforContacts.MaxLength = 255;
                this.columnPreviousName.MaxLength = 255;
                this.columnExOwner.MaxLength = 255;
                this.columnBuilder.MaxLength = 255;
                this.columnBuldersShipNumber.MaxLength = 255;
                this.columnFlag.MaxLength = 255;
                this.columnClassification.MaxLength = 255;
                this.columnTYPE.MaxLength = 255;
                this.columnLoA.MaxLength = 255;
                this.columnBTH.MaxLength = 255;
                this.columnDWT.MaxLength = 255;
                this.columnSold.MaxLength = 255;
                this.columnPROwner.MaxLength = 255;
                this.columnOwner.MaxLength = 255;
                this.columnPhotofilename1.MaxLength = 255;
                this.columnPhotofilename2.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ship_Master_TBRow NewShip_Master_TBRow() {
                return ((Ship_Master_TBRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Ship_Master_TBRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Ship_Master_TBRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Ship_Master_TBRowChanged != null)) {
                    this.Ship_Master_TBRowChanged(this, new Ship_Master_TBRowChangeEvent(((Ship_Master_TBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Ship_Master_TBRowChanging != null)) {
                    this.Ship_Master_TBRowChanging(this, new Ship_Master_TBRowChangeEvent(((Ship_Master_TBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Ship_Master_TBRowDeleted != null)) {
                    this.Ship_Master_TBRowDeleted(this, new Ship_Master_TBRowChangeEvent(((Ship_Master_TBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Ship_Master_TBRowDeleting != null)) {
                    this.Ship_Master_TBRowDeleting(this, new Ship_Master_TBRowChangeEvent(((Ship_Master_TBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveShip_Master_TBRow(Ship_Master_TBRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AZUREDBDataSet ds = new AZUREDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Ship_Master_TBDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class General_fleet_attachGroup1Row : global::System.Data.DataRow {
            
            private General_fleet_attachGroup1DataTable tableGeneral_fleet_attachGroup1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal General_fleet_attachGroup1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGeneral_fleet_attachGroup1 = ((General_fleet_attachGroup1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableGeneral_fleet_attachGroup1.IDColumn]));
                }
                set {
                    this[this.tableGeneral_fleet_attachGroup1.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int GeneralinfoID {
                get {
                    try {
                        return ((int)(this[this.tableGeneral_fleet_attachGroup1.GeneralinfoIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_fleet_attachGroup1\' にある列 \'GeneralinfoID\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_fleet_attachGroup1.GeneralinfoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Filename {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_fleet_attachGroup1.FilenameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_fleet_attachGroup1\' にある列 \'Filename\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_fleet_attachGroup1.FilenameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Filepath {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_fleet_attachGroup1.FilepathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_fleet_attachGroup1\' にある列 \'Filepath\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_fleet_attachGroup1.FilepathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Updated {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_fleet_attachGroup1.UpdatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_fleet_attachGroup1\' にある列 \'Updated\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_fleet_attachGroup1.UpdatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_fleet_attachGroup1.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_fleet_attachGroup1\' にある列 \'Remark\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_fleet_attachGroup1.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public General_Fleet_informationRow General_Fleet_informationRow {
                get {
                    return ((General_Fleet_informationRow)(this.GetParentRow(this.Table.ParentRelations["FK_General_fleet_attachGroup1_General_Fleet_information"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_General_fleet_attachGroup1_General_Fleet_information"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGeneralinfoIDNull() {
                return this.IsNull(this.tableGeneral_fleet_attachGroup1.GeneralinfoIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGeneralinfoIDNull() {
                this[this.tableGeneral_fleet_attachGroup1.GeneralinfoIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFilenameNull() {
                return this.IsNull(this.tableGeneral_fleet_attachGroup1.FilenameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFilenameNull() {
                this[this.tableGeneral_fleet_attachGroup1.FilenameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFilepathNull() {
                return this.IsNull(this.tableGeneral_fleet_attachGroup1.FilepathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFilepathNull() {
                this[this.tableGeneral_fleet_attachGroup1.FilepathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUpdatedNull() {
                return this.IsNull(this.tableGeneral_fleet_attachGroup1.UpdatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUpdatedNull() {
                this[this.tableGeneral_fleet_attachGroup1.UpdatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableGeneral_fleet_attachGroup1.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRemarkNull() {
                this[this.tableGeneral_fleet_attachGroup1.RemarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class General_Fleet_informationRow : global::System.Data.DataRow {
            
            private General_Fleet_informationDataTable tableGeneral_Fleet_information;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal General_Fleet_informationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGeneral_Fleet_information = ((General_Fleet_informationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableGeneral_Fleet_information.IDColumn]));
                }
                set {
                    this[this.tableGeneral_Fleet_information.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string VESSEL_NAME {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.VESSEL_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'VESSEL NAME\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.VESSEL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime Prop_shaft_draw {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGeneral_Fleet_information.Prop_shaft_drawColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'Prop shaft draw\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.Prop_shaft_drawColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime Nxt_Nxt_Dock {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGeneral_Fleet_information.Nxt_Nxt_DockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'Nxt Nxt Dock\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.Nxt_Nxt_DockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'Type\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime IOPPC_renewal_due {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGeneral_Fleet_information.IOPPC_renewal_dueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'IOPPC renewal due\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.IOPPC_renewal_dueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime USCG_postponed_until {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGeneral_Fleet_information.USCG_postponed_untilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'USCG postponed until\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.USCG_postponed_untilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime USCG_due_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGeneral_Fleet_information.USCG_due_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'USCG due date\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.USCG_due_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal _Ballast_water_capacity_m3_ {
                get {
                    try {
                        return ((decimal)(this[this.tableGeneral_Fleet_information._Ballast_water_capacity_m3_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'Ballast water capacity(m3)\' の値は DBNull です。" +
                                "", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information._Ballast_water_capacity_m3_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Pumps {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.PumpsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'Pumps\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.PumpsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Pump_capacity {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.Pump_capacityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'Pump capacity\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.Pump_capacityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'Remarks\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string VSL_CODE {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.VSL_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'VSL CODE\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.VSL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SMC_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.SMC_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'SMC TYPE\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.SMC_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CLASS {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.CLASSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'CLASS\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.CLASSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SHIPYARD {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.SHIPYARDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'SHIPYARD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.SHIPYARDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SHIP_NO {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.SHIP_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'SHIP NO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.SHIP_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LENGTH {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.LENGTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'LENGTH\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.LENGTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BREATH {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.BREATHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'BREATH\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.BREATHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DRAFT {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.DRAFTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'DRAFT\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.DRAFTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NET_TON {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.NET_TONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'NET TON\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.NET_TONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DEAD_WEIGHT {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.DEAD_WEIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'DEAD WEIGHT\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.DEAD_WEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string KEEL_LAID {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.KEEL_LAIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'KEEL LAID\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.KEEL_LAIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DELIVERY_DATE {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.DELIVERY_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'DELIVERY DATE\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.DELIVERY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AGE {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.AGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'AGE\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.AGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TRADE {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.TRADEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'TRADE\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.TRADEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CREW {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.CREWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'CREW\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.CREWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NATIONALITY {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.NATIONALITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'NATIONALITY\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.NATIONALITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string IMO_NO {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.IMO_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'IMO NO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.IMO_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GRT {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.GRTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'GRT\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.GRTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Delivery {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.DeliveryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'Delivery\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.DeliveryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Flag {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.FlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'Flag\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.FlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ME_Maker {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.ME_MakerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'ME Maker\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.ME_MakerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ME_Type {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.ME_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'ME Type\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.ME_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ME_Output {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.ME_OutputColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'ME Output\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.ME_OutputColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string METC_Type {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.METC_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'METC Type\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.METC_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DE_Maeker {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.DE_MaekerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'DE Maeker\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.DE_MaekerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DE_Type {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.DE_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'DE Type\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.DE_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DE_No {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.DE_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'DE No\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.DE_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DE_Output {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.DE_OutputColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'DE Output\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.DE_OutputColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DETC_Type {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.DETC_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'DETC Type\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.DETC_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GEN_Maker {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.GEN_MakerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'GEN Maker\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.GEN_MakerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GEN_Capacity {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.GEN_CapacityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'GEN Capacity\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.GEN_CapacityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GEN_lubrication {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.GEN_lubricationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'GEN lubrication\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.GEN_lubricationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GEN_Lub_oil {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.GEN_Lub_oilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'GEN Lub oil\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.GEN_Lub_oilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GEN_lub_qty {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.GEN_lub_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'GEN lub qty\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.GEN_lub_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AB_Maker {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.AB_MakerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'AB Maker\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.AB_MakerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AB_Type {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.AB_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'AB Type\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.AB_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AB_Capacity {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.AB_CapacityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'AB Capacity\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.AB_CapacityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Burner_Maker {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.Burner_MakerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'Burner Maker\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.Burner_MakerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Buner_Type {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.Buner_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'Buner Type\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.Buner_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Buner_FO_consumpt {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.Buner_FO_consumptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'Buner FO consumpt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.Buner_FO_consumptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AB_Boiler_Water {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.AB_Boiler_WaterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'AB Boiler Water\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.AB_Boiler_WaterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Charterer {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.ChartererColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'Charterer\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.ChartererColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CharterPeriod {
                get {
                    try {
                        return ((string)(this[this.tableGeneral_Fleet_information.CharterPeriodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'CharterPeriod\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.CharterPeriodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime BoilerSurvay {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGeneral_Fleet_information.BoilerSurvayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'BoilerSurvay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.BoilerSurvayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime CraneLoadTest {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGeneral_Fleet_information.CraneLoadTestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'CraneLoadTest\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.CraneLoadTestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime CraneAnnual {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGeneral_Fleet_information.CraneAnnualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'General_Fleet_information\' にある列 \'CraneAnnual\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGeneral_Fleet_information.CraneAnnualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ship_Master_TBRow Ship_Master_TBRow {
                get {
                    return ((Ship_Master_TBRow)(this.GetParentRow(this.Table.ParentRelations["FK_General_Fleet_information_Ship_Master_TB"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_General_Fleet_information_Ship_Master_TB"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsVESSEL_NAMENull() {
                return this.IsNull(this.tableGeneral_Fleet_information.VESSEL_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetVESSEL_NAMENull() {
                this[this.tableGeneral_Fleet_information.VESSEL_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProp_shaft_drawNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.Prop_shaft_drawColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProp_shaft_drawNull() {
                this[this.tableGeneral_Fleet_information.Prop_shaft_drawColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNxt_Nxt_DockNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.Nxt_Nxt_DockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNxt_Nxt_DockNull() {
                this[this.tableGeneral_Fleet_information.Nxt_Nxt_DockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTypeNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTypeNull() {
                this[this.tableGeneral_Fleet_information.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIOPPC_renewal_dueNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.IOPPC_renewal_dueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIOPPC_renewal_dueNull() {
                this[this.tableGeneral_Fleet_information.IOPPC_renewal_dueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUSCG_postponed_untilNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.USCG_postponed_untilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUSCG_postponed_untilNull() {
                this[this.tableGeneral_Fleet_information.USCG_postponed_untilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUSCG_due_dateNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.USCG_due_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUSCG_due_dateNull() {
                this[this.tableGeneral_Fleet_information.USCG_due_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is_Ballast_water_capacity_m3_Null() {
                return this.IsNull(this.tableGeneral_Fleet_information._Ballast_water_capacity_m3_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set_Ballast_water_capacity_m3_Null() {
                this[this.tableGeneral_Fleet_information._Ballast_water_capacity_m3_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPumpsNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.PumpsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPumpsNull() {
                this[this.tableGeneral_Fleet_information.PumpsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPump_capacityNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.Pump_capacityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPump_capacityNull() {
                this[this.tableGeneral_Fleet_information.Pump_capacityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRemarksNull() {
                this[this.tableGeneral_Fleet_information.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsVSL_CODENull() {
                return this.IsNull(this.tableGeneral_Fleet_information.VSL_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetVSL_CODENull() {
                this[this.tableGeneral_Fleet_information.VSL_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSMC_TYPENull() {
                return this.IsNull(this.tableGeneral_Fleet_information.SMC_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSMC_TYPENull() {
                this[this.tableGeneral_Fleet_information.SMC_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCLASSNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.CLASSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCLASSNull() {
                this[this.tableGeneral_Fleet_information.CLASSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSHIPYARDNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.SHIPYARDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSHIPYARDNull() {
                this[this.tableGeneral_Fleet_information.SHIPYARDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSHIP_NONull() {
                return this.IsNull(this.tableGeneral_Fleet_information.SHIP_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSHIP_NONull() {
                this[this.tableGeneral_Fleet_information.SHIP_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLENGTHNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.LENGTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLENGTHNull() {
                this[this.tableGeneral_Fleet_information.LENGTHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBREATHNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.BREATHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBREATHNull() {
                this[this.tableGeneral_Fleet_information.BREATHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDRAFTNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.DRAFTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDRAFTNull() {
                this[this.tableGeneral_Fleet_information.DRAFTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNET_TONNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.NET_TONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNET_TONNull() {
                this[this.tableGeneral_Fleet_information.NET_TONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDEAD_WEIGHTNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.DEAD_WEIGHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDEAD_WEIGHTNull() {
                this[this.tableGeneral_Fleet_information.DEAD_WEIGHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsKEEL_LAIDNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.KEEL_LAIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetKEEL_LAIDNull() {
                this[this.tableGeneral_Fleet_information.KEEL_LAIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDELIVERY_DATENull() {
                return this.IsNull(this.tableGeneral_Fleet_information.DELIVERY_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDELIVERY_DATENull() {
                this[this.tableGeneral_Fleet_information.DELIVERY_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAGENull() {
                return this.IsNull(this.tableGeneral_Fleet_information.AGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAGENull() {
                this[this.tableGeneral_Fleet_information.AGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTRADENull() {
                return this.IsNull(this.tableGeneral_Fleet_information.TRADEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTRADENull() {
                this[this.tableGeneral_Fleet_information.TRADEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCREWNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.CREWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCREWNull() {
                this[this.tableGeneral_Fleet_information.CREWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNATIONALITYNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.NATIONALITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNATIONALITYNull() {
                this[this.tableGeneral_Fleet_information.NATIONALITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIMO_NONull() {
                return this.IsNull(this.tableGeneral_Fleet_information.IMO_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIMO_NONull() {
                this[this.tableGeneral_Fleet_information.IMO_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGRTNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.GRTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGRTNull() {
                this[this.tableGeneral_Fleet_information.GRTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDeliveryNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.DeliveryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDeliveryNull() {
                this[this.tableGeneral_Fleet_information.DeliveryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFlagNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.FlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFlagNull() {
                this[this.tableGeneral_Fleet_information.FlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsME_MakerNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.ME_MakerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetME_MakerNull() {
                this[this.tableGeneral_Fleet_information.ME_MakerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsME_TypeNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.ME_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetME_TypeNull() {
                this[this.tableGeneral_Fleet_information.ME_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsME_OutputNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.ME_OutputColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetME_OutputNull() {
                this[this.tableGeneral_Fleet_information.ME_OutputColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMETC_TypeNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.METC_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMETC_TypeNull() {
                this[this.tableGeneral_Fleet_information.METC_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDE_MaekerNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.DE_MaekerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDE_MaekerNull() {
                this[this.tableGeneral_Fleet_information.DE_MaekerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDE_TypeNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.DE_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDE_TypeNull() {
                this[this.tableGeneral_Fleet_information.DE_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDE_NoNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.DE_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDE_NoNull() {
                this[this.tableGeneral_Fleet_information.DE_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDE_OutputNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.DE_OutputColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDE_OutputNull() {
                this[this.tableGeneral_Fleet_information.DE_OutputColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDETC_TypeNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.DETC_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDETC_TypeNull() {
                this[this.tableGeneral_Fleet_information.DETC_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGEN_MakerNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.GEN_MakerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGEN_MakerNull() {
                this[this.tableGeneral_Fleet_information.GEN_MakerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGEN_CapacityNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.GEN_CapacityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGEN_CapacityNull() {
                this[this.tableGeneral_Fleet_information.GEN_CapacityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGEN_lubricationNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.GEN_lubricationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGEN_lubricationNull() {
                this[this.tableGeneral_Fleet_information.GEN_lubricationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGEN_Lub_oilNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.GEN_Lub_oilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGEN_Lub_oilNull() {
                this[this.tableGeneral_Fleet_information.GEN_Lub_oilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGEN_lub_qtyNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.GEN_lub_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGEN_lub_qtyNull() {
                this[this.tableGeneral_Fleet_information.GEN_lub_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAB_MakerNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.AB_MakerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAB_MakerNull() {
                this[this.tableGeneral_Fleet_information.AB_MakerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAB_TypeNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.AB_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAB_TypeNull() {
                this[this.tableGeneral_Fleet_information.AB_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAB_CapacityNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.AB_CapacityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAB_CapacityNull() {
                this[this.tableGeneral_Fleet_information.AB_CapacityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBurner_MakerNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.Burner_MakerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBurner_MakerNull() {
                this[this.tableGeneral_Fleet_information.Burner_MakerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBuner_TypeNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.Buner_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBuner_TypeNull() {
                this[this.tableGeneral_Fleet_information.Buner_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBuner_FO_consumptNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.Buner_FO_consumptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBuner_FO_consumptNull() {
                this[this.tableGeneral_Fleet_information.Buner_FO_consumptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAB_Boiler_WaterNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.AB_Boiler_WaterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAB_Boiler_WaterNull() {
                this[this.tableGeneral_Fleet_information.AB_Boiler_WaterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsChartererNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.ChartererColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetChartererNull() {
                this[this.tableGeneral_Fleet_information.ChartererColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCharterPeriodNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.CharterPeriodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCharterPeriodNull() {
                this[this.tableGeneral_Fleet_information.CharterPeriodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBoilerSurvayNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.BoilerSurvayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBoilerSurvayNull() {
                this[this.tableGeneral_Fleet_information.BoilerSurvayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCraneLoadTestNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.CraneLoadTestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCraneLoadTestNull() {
                this[this.tableGeneral_Fleet_information.CraneLoadTestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCraneAnnualNull() {
                return this.IsNull(this.tableGeneral_Fleet_information.CraneAnnualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCraneAnnualNull() {
                this[this.tableGeneral_Fleet_information.CraneAnnualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public General_fleet_attachGroup1Row[] GetGeneral_fleet_attachGroup1Rows() {
                if ((this.Table.ChildRelations["FK_General_fleet_attachGroup1_General_Fleet_information"] == null)) {
                    return new General_fleet_attachGroup1Row[0];
                }
                else {
                    return ((General_fleet_attachGroup1Row[])(base.GetChildRows(this.Table.ChildRelations["FK_General_fleet_attachGroup1_General_Fleet_information"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Ship_Master_TBRow : global::System.Data.DataRow {
            
            private Ship_Master_TBDataTable tableShip_Master_TB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal Ship_Master_TBRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableShip_Master_TB = ((Ship_Master_TBDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableShip_Master_TB.IDColumn]));
                }
                set {
                    this[this.tableShip_Master_TB.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int OwnerGroup {
                get {
                    try {
                        return ((int)(this[this.tableShip_Master_TB.OwnerGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'OwnerGroup\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.OwnerGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PresentName {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.PresentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'PresentName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.PresentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Shortcharacter {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.ShortcharacterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'Shortcharacter\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.ShortcharacterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string IMONumber {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.IMONumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'IMONumber\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.IMONumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FBBtelephone {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.FBBtelephoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'FBBtelephone\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.FBBtelephoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FBBtelephoneShort {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.FBBtelephoneShortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'FBBtelephoneShort\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.FBBtelephoneShortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FBBfacsimile {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.FBBfacsimileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'FBBfacsimile\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.FBBfacsimileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string InmFtelephone1 {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.InmFtelephone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'InmFtelephone1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.InmFtelephone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string InmFtelephone2 {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.InmFtelephone2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'InmFtelephone2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.InmFtelephone2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string InmFfacsimile {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.InmFfacsimileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'InmFfacsimile\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.InmFfacsimileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string InmCSATmail1 {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.InmCSATmail1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'InmCSATmail1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.InmCSATmail1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string InmCSATmail2 {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.InmCSATmail2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'InmCSATmail2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.InmCSATmail2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string email1 {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.email1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'email1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.email1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string email2 {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.email2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'email2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.email2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LastUpdateforContacts {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.LastUpdateforContactsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'LastUpdateforContacts\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.LastUpdateforContactsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PreviousName {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.PreviousNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'PreviousName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.PreviousNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ExOwner {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.ExOwnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'ExOwner\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.ExOwnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Builder {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.BuilderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'Builder\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.BuilderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BuldersShipNumber {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.BuldersShipNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'BuldersShipNumber\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.BuldersShipNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime BuildYear {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableShip_Master_TB.BuildYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'BuildYear\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.BuildYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Flag {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.FlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'Flag\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.FlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Classification {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.ClassificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'Classification\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.ClassificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TYPE {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'TYPE\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LoA {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.LoAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'LoA\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.LoAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BTH {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.BTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'BTH\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.BTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DWT {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.DWTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'DWT\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.DWTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Sold {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.SoldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'Sold\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.SoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PROwner {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.PROwnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'PROwner\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.PROwnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Owner {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.OwnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'Owner\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.OwnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Photofilename1 {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.Photofilename1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'Photofilename1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.Photofilename1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Photofilename2 {
                get {
                    try {
                        return ((string)(this[this.tableShip_Master_TB.Photofilename2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'Photofilename2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.Photofilename2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int PICID {
                get {
                    try {
                        return ((int)(this[this.tableShip_Master_TB.PICIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Ship_Master_TB\' にある列 \'PICID\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShip_Master_TB.PICIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOwnerGroupNull() {
                return this.IsNull(this.tableShip_Master_TB.OwnerGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOwnerGroupNull() {
                this[this.tableShip_Master_TB.OwnerGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPresentNameNull() {
                return this.IsNull(this.tableShip_Master_TB.PresentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPresentNameNull() {
                this[this.tableShip_Master_TB.PresentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsShortcharacterNull() {
                return this.IsNull(this.tableShip_Master_TB.ShortcharacterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetShortcharacterNull() {
                this[this.tableShip_Master_TB.ShortcharacterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIMONumberNull() {
                return this.IsNull(this.tableShip_Master_TB.IMONumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIMONumberNull() {
                this[this.tableShip_Master_TB.IMONumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFBBtelephoneNull() {
                return this.IsNull(this.tableShip_Master_TB.FBBtelephoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFBBtelephoneNull() {
                this[this.tableShip_Master_TB.FBBtelephoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFBBtelephoneShortNull() {
                return this.IsNull(this.tableShip_Master_TB.FBBtelephoneShortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFBBtelephoneShortNull() {
                this[this.tableShip_Master_TB.FBBtelephoneShortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFBBfacsimileNull() {
                return this.IsNull(this.tableShip_Master_TB.FBBfacsimileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFBBfacsimileNull() {
                this[this.tableShip_Master_TB.FBBfacsimileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInmFtelephone1Null() {
                return this.IsNull(this.tableShip_Master_TB.InmFtelephone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInmFtelephone1Null() {
                this[this.tableShip_Master_TB.InmFtelephone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInmFtelephone2Null() {
                return this.IsNull(this.tableShip_Master_TB.InmFtelephone2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInmFtelephone2Null() {
                this[this.tableShip_Master_TB.InmFtelephone2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInmFfacsimileNull() {
                return this.IsNull(this.tableShip_Master_TB.InmFfacsimileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInmFfacsimileNull() {
                this[this.tableShip_Master_TB.InmFfacsimileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInmCSATmail1Null() {
                return this.IsNull(this.tableShip_Master_TB.InmCSATmail1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInmCSATmail1Null() {
                this[this.tableShip_Master_TB.InmCSATmail1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInmCSATmail2Null() {
                return this.IsNull(this.tableShip_Master_TB.InmCSATmail2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInmCSATmail2Null() {
                this[this.tableShip_Master_TB.InmCSATmail2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Isemail1Null() {
                return this.IsNull(this.tableShip_Master_TB.email1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Setemail1Null() {
                this[this.tableShip_Master_TB.email1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Isemail2Null() {
                return this.IsNull(this.tableShip_Master_TB.email2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Setemail2Null() {
                this[this.tableShip_Master_TB.email2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLastUpdateforContactsNull() {
                return this.IsNull(this.tableShip_Master_TB.LastUpdateforContactsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLastUpdateforContactsNull() {
                this[this.tableShip_Master_TB.LastUpdateforContactsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPreviousNameNull() {
                return this.IsNull(this.tableShip_Master_TB.PreviousNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPreviousNameNull() {
                this[this.tableShip_Master_TB.PreviousNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsExOwnerNull() {
                return this.IsNull(this.tableShip_Master_TB.ExOwnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetExOwnerNull() {
                this[this.tableShip_Master_TB.ExOwnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBuilderNull() {
                return this.IsNull(this.tableShip_Master_TB.BuilderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBuilderNull() {
                this[this.tableShip_Master_TB.BuilderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBuldersShipNumberNull() {
                return this.IsNull(this.tableShip_Master_TB.BuldersShipNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBuldersShipNumberNull() {
                this[this.tableShip_Master_TB.BuldersShipNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBuildYearNull() {
                return this.IsNull(this.tableShip_Master_TB.BuildYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBuildYearNull() {
                this[this.tableShip_Master_TB.BuildYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFlagNull() {
                return this.IsNull(this.tableShip_Master_TB.FlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFlagNull() {
                this[this.tableShip_Master_TB.FlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsClassificationNull() {
                return this.IsNull(this.tableShip_Master_TB.ClassificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetClassificationNull() {
                this[this.tableShip_Master_TB.ClassificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTYPENull() {
                return this.IsNull(this.tableShip_Master_TB.TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTYPENull() {
                this[this.tableShip_Master_TB.TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLoANull() {
                return this.IsNull(this.tableShip_Master_TB.LoAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLoANull() {
                this[this.tableShip_Master_TB.LoAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBTHNull() {
                return this.IsNull(this.tableShip_Master_TB.BTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBTHNull() {
                this[this.tableShip_Master_TB.BTHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDWTNull() {
                return this.IsNull(this.tableShip_Master_TB.DWTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDWTNull() {
                this[this.tableShip_Master_TB.DWTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSoldNull() {
                return this.IsNull(this.tableShip_Master_TB.SoldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSoldNull() {
                this[this.tableShip_Master_TB.SoldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPROwnerNull() {
                return this.IsNull(this.tableShip_Master_TB.PROwnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPROwnerNull() {
                this[this.tableShip_Master_TB.PROwnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOwnerNull() {
                return this.IsNull(this.tableShip_Master_TB.OwnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOwnerNull() {
                this[this.tableShip_Master_TB.OwnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPhotofilename1Null() {
                return this.IsNull(this.tableShip_Master_TB.Photofilename1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPhotofilename1Null() {
                this[this.tableShip_Master_TB.Photofilename1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPhotofilename2Null() {
                return this.IsNull(this.tableShip_Master_TB.Photofilename2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPhotofilename2Null() {
                this[this.tableShip_Master_TB.Photofilename2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPICIDNull() {
                return this.IsNull(this.tableShip_Master_TB.PICIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPICIDNull() {
                this[this.tableShip_Master_TB.PICIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public General_Fleet_informationRow[] GetGeneral_Fleet_informationRows() {
                if ((this.Table.ChildRelations["FK_General_Fleet_information_Ship_Master_TB"] == null)) {
                    return new General_Fleet_informationRow[0];
                }
                else {
                    return ((General_Fleet_informationRow[])(base.GetChildRows(this.Table.ChildRelations["FK_General_Fleet_information_Ship_Master_TB"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class General_fleet_attachGroup1RowChangeEvent : global::System.EventArgs {
            
            private General_fleet_attachGroup1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public General_fleet_attachGroup1RowChangeEvent(General_fleet_attachGroup1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public General_fleet_attachGroup1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class General_Fleet_informationRowChangeEvent : global::System.EventArgs {
            
            private General_Fleet_informationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public General_Fleet_informationRowChangeEvent(General_Fleet_informationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public General_Fleet_informationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class Ship_Master_TBRowChangeEvent : global::System.EventArgs {
            
            private Ship_Master_TBRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ship_Master_TBRowChangeEvent(Ship_Master_TBRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ship_Master_TBRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GeneralInfo.AZUREDBDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class General_fleet_attachGroup1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public General_fleet_attachGroup1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "General_fleet_attachGroup1";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("GeneralinfoID", "GeneralinfoID");
            tableMapping.ColumnMappings.Add("Filename", "Filename");
            tableMapping.ColumnMappings.Add("Filepath", "Filepath");
            tableMapping.ColumnMappings.Add("Updated", "Updated");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[General_fleet_attachGroup1] WHERE (([ID] = @Original_ID) AND (" +
                "(@IsNull_GeneralinfoID = 1 AND [GeneralinfoID] IS NULL) OR ([GeneralinfoID] = @O" +
                "riginal_GeneralinfoID)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GeneralinfoID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralinfoID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GeneralinfoID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralinfoID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[General_fleet_attachGroup1] ([GeneralinfoID], [Filename], [Filepath], [Updated], [Remark]) VALUES (@GeneralinfoID, @Filename, @Filepath, @Updated, @Remark);
SELECT ID, GeneralinfoID, Filename, Filepath, Updated, Remark FROM General_fleet_attachGroup1 WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GeneralinfoID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralinfoID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Filename", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Filename", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Filepath", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Filepath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Updated", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Updated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[General_fleet_attachGroup1] SET [GeneralinfoID] = @GeneralinfoID, [Filename] = @Filename, [Filepath] = @Filepath, [Updated] = @Updated, [Remark] = @Remark WHERE (([ID] = @Original_ID) AND ((@IsNull_GeneralinfoID = 1 AND [GeneralinfoID] IS NULL) OR ([GeneralinfoID] = @Original_GeneralinfoID)));
SELECT ID, GeneralinfoID, Filename, Filepath, Updated, Remark FROM General_fleet_attachGroup1 WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GeneralinfoID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralinfoID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Filename", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Filename", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Filepath", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Filepath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Updated", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Updated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GeneralinfoID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralinfoID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GeneralinfoID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralinfoID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GeneralInfo.Properties.Settings.Default.AZUREDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, GeneralinfoID, Filename, Filepath, Updated, Remark FROM dbo.General_fl" +
                "eet_attachGroup1";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AZUREDBDataSet.General_fleet_attachGroup1DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AZUREDBDataSet.General_fleet_attachGroup1DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AZUREDBDataSet.General_fleet_attachGroup1DataTable dataTable = new AZUREDBDataSet.General_fleet_attachGroup1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AZUREDBDataSet.General_fleet_attachGroup1DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AZUREDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "General_fleet_attachGroup1");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, global::System.Nullable<int> Original_GeneralinfoID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_GeneralinfoID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_GeneralinfoID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> GeneralinfoID, string Filename, string Filepath, string Updated, string Remark) {
            if ((GeneralinfoID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(GeneralinfoID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Filename == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Filename));
            }
            if ((Filepath == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Filepath));
            }
            if ((Updated == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Updated));
            }
            if ((Remark == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Remark));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> GeneralinfoID, string Filename, string Filepath, string Updated, string Remark, int Original_ID, global::System.Nullable<int> Original_GeneralinfoID, int ID) {
            if ((GeneralinfoID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(GeneralinfoID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Filename == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Filename));
            }
            if ((Filepath == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Filepath));
            }
            if ((Updated == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Updated));
            }
            if ((Remark == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Remark));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID));
            if ((Original_GeneralinfoID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_GeneralinfoID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> GeneralinfoID, string Filename, string Filepath, string Updated, string Remark, int Original_ID, global::System.Nullable<int> Original_GeneralinfoID) {
            return this.Update(GeneralinfoID, Filename, Filepath, Updated, Remark, Original_ID, Original_GeneralinfoID, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class General_Fleet_informationTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public General_Fleet_informationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "General_Fleet_information";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("VESSEL NAME", "VESSEL NAME");
            tableMapping.ColumnMappings.Add("Prop shaft draw", "Prop shaft draw");
            tableMapping.ColumnMappings.Add("Nxt Nxt Dock", "Nxt Nxt Dock");
            tableMapping.ColumnMappings.Add("Type", "Type");
            tableMapping.ColumnMappings.Add("IOPPC renewal due", "IOPPC renewal due");
            tableMapping.ColumnMappings.Add("USCG postponed until", "USCG postponed until");
            tableMapping.ColumnMappings.Add("USCG due date", "USCG due date");
            tableMapping.ColumnMappings.Add("Ballast water capacity(m3)", "Ballast water capacity(m3)");
            tableMapping.ColumnMappings.Add("Pumps", "Pumps");
            tableMapping.ColumnMappings.Add("Pump capacity", "Pump capacity");
            tableMapping.ColumnMappings.Add("Remarks", "Remarks");
            tableMapping.ColumnMappings.Add("VSL CODE", "VSL CODE");
            tableMapping.ColumnMappings.Add("SMC TYPE", "SMC TYPE");
            tableMapping.ColumnMappings.Add("CLASS", "CLASS");
            tableMapping.ColumnMappings.Add("SHIPYARD", "SHIPYARD");
            tableMapping.ColumnMappings.Add("SHIP NO", "SHIP NO");
            tableMapping.ColumnMappings.Add("LENGTH", "LENGTH");
            tableMapping.ColumnMappings.Add("BREATH", "BREATH");
            tableMapping.ColumnMappings.Add("DRAFT", "DRAFT");
            tableMapping.ColumnMappings.Add("NET TON", "NET TON");
            tableMapping.ColumnMappings.Add("DEAD WEIGHT", "DEAD WEIGHT");
            tableMapping.ColumnMappings.Add("KEEL LAID", "KEEL LAID");
            tableMapping.ColumnMappings.Add("DELIVERY DATE", "DELIVERY DATE");
            tableMapping.ColumnMappings.Add("AGE", "AGE");
            tableMapping.ColumnMappings.Add("TRADE", "TRADE");
            tableMapping.ColumnMappings.Add("CREW", "CREW");
            tableMapping.ColumnMappings.Add("NATIONALITY", "NATIONALITY");
            tableMapping.ColumnMappings.Add("IMO NO", "IMO NO");
            tableMapping.ColumnMappings.Add("GRT", "GRT");
            tableMapping.ColumnMappings.Add("Delivery", "Delivery");
            tableMapping.ColumnMappings.Add("Flag", "Flag");
            tableMapping.ColumnMappings.Add("ME Maker", "ME Maker");
            tableMapping.ColumnMappings.Add("ME Type", "ME Type");
            tableMapping.ColumnMappings.Add("ME Output", "ME Output");
            tableMapping.ColumnMappings.Add("METC Type", "METC Type");
            tableMapping.ColumnMappings.Add("DE Maeker", "DE Maeker");
            tableMapping.ColumnMappings.Add("DE Type", "DE Type");
            tableMapping.ColumnMappings.Add("DE No", "DE No");
            tableMapping.ColumnMappings.Add("DE Output", "DE Output");
            tableMapping.ColumnMappings.Add("DETC Type", "DETC Type");
            tableMapping.ColumnMappings.Add("GEN Maker", "GEN Maker");
            tableMapping.ColumnMappings.Add("GEN Capacity", "GEN Capacity");
            tableMapping.ColumnMappings.Add("GEN lubrication", "GEN lubrication");
            tableMapping.ColumnMappings.Add("GEN Lub oil", "GEN Lub oil");
            tableMapping.ColumnMappings.Add("GEN lub qty", "GEN lub qty");
            tableMapping.ColumnMappings.Add("AB Maker", "AB Maker");
            tableMapping.ColumnMappings.Add("AB Type", "AB Type");
            tableMapping.ColumnMappings.Add("AB Capacity", "AB Capacity");
            tableMapping.ColumnMappings.Add("Burner Maker", "Burner Maker");
            tableMapping.ColumnMappings.Add("Buner Type", "Buner Type");
            tableMapping.ColumnMappings.Add("Buner FO consumpt", "Buner FO consumpt");
            tableMapping.ColumnMappings.Add("AB Boiler Water", "AB Boiler Water");
            tableMapping.ColumnMappings.Add("Charterer", "Charterer");
            tableMapping.ColumnMappings.Add("CharterPeriod", "CharterPeriod");
            tableMapping.ColumnMappings.Add("BoilerSurvay", "BoilerSurvay");
            tableMapping.ColumnMappings.Add("CraneLoadTest", "CraneLoadTest");
            tableMapping.ColumnMappings.Add("CraneAnnual", "CraneAnnual");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[General_Fleet_information] WHERE (([ID] = @Original_ID) AND ((@IsNull_VESSEL_NAME = 1 AND [VESSEL NAME] IS NULL) OR ([VESSEL NAME] = @Original_VESSEL_NAME)) AND ((@IsNull_Prop_shaft_draw = 1 AND [Prop shaft draw] IS NULL) OR ([Prop shaft draw] = @Original_Prop_shaft_draw)) AND ((@IsNull_Nxt_Nxt_Dock = 1 AND [Nxt Nxt Dock] IS NULL) OR ([Nxt Nxt Dock] = @Original_Nxt_Nxt_Dock)) AND ((@IsNull_IOPPC_renewal_due = 1 AND [IOPPC renewal due] IS NULL) OR ([IOPPC renewal due] = @Original_IOPPC_renewal_due)) AND ((@IsNull_USCG_postponed_until = 1 AND [USCG postponed until] IS NULL) OR ([USCG postponed until] = @Original_USCG_postponed_until)) AND ((@IsNull_USCG_due_date = 1 AND [USCG due date] IS NULL) OR ([USCG due date] = @Original_USCG_due_date)) AND ((@p3 = 1 AND [Ballast water capacity(m3)] IS NULL) OR ([Ballast water capacity(m3)] = @p2)) AND ((@IsNull_Charterer = 1 AND [Charterer] IS NULL) OR ([Charterer] = @Original_Charterer)) AND ((@IsNull_BoilerSurvay = 1 AND [BoilerSurvay] IS NULL) OR ([BoilerSurvay] = @Original_BoilerSurvay)) AND ((@IsNull_CraneLoadTest = 1 AND [CraneLoadTest] IS NULL) OR ([CraneLoadTest] = @Original_CraneLoadTest)) AND ((@IsNull_CraneAnnual = 1 AND [CraneAnnual] IS NULL) OR ([CraneAnnual] = @Original_CraneAnnual)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VESSEL_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VESSEL NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VESSEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VESSEL NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Prop_shaft_draw", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Prop shaft draw", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Prop_shaft_draw", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Prop shaft draw", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nxt_Nxt_Dock", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nxt Nxt Dock", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nxt_Nxt_Dock", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nxt Nxt Dock", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IOPPC_renewal_due", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IOPPC renewal due", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IOPPC_renewal_due", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IOPPC renewal due", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USCG_postponed_until", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USCG postponed until", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USCG_postponed_until", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USCG postponed until", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USCG_due_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USCG due date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USCG_due_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USCG due date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ballast water capacity(m3)", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ballast water capacity(m3)", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Charterer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Charterer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Charterer", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Charterer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BoilerSurvay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoilerSurvay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BoilerSurvay", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoilerSurvay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CraneLoadTest", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CraneLoadTest", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CraneLoadTest", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CraneLoadTest", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CraneAnnual", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CraneAnnual", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CraneAnnual", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CraneAnnual", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[General_Fleet_information] ([VESSEL NAME], [Prop shaft draw], " +
                "[Nxt Nxt Dock], [Type], [IOPPC renewal due], [USCG postponed until], [USCG due d" +
                "ate], [Ballast water capacity(m3)], [Pumps], [Pump capacity], [Remarks], [VSL CO" +
                "DE], [SMC TYPE], [CLASS], [SHIPYARD], [SHIP NO], [LENGTH], [BREATH], [DRAFT], [N" +
                "ET TON], [DEAD WEIGHT], [KEEL LAID], [DELIVERY DATE], [AGE], [TRADE], [CREW], [N" +
                "ATIONALITY], [IMO NO], [GRT], [Delivery], [Flag], [ME Maker], [ME Type], [ME Out" +
                "put], [METC Type], [DE Maeker], [DE Type], [DE No], [DE Output], [DETC Type], [G" +
                "EN Maker], [GEN Capacity], [GEN lubrication], [GEN Lub oil], [GEN lub qty], [AB " +
                "Maker], [AB Type], [AB Capacity], [Burner Maker], [Buner Type], [Buner FO consum" +
                "pt], [AB Boiler Water], [Charterer], [CharterPeriod], [BoilerSurvay], [CraneLoad" +
                "Test], [CraneAnnual]) VALUES (@VESSEL_NAME, @Prop_shaft_draw, @Nxt_Nxt_Dock, @Ty" +
                "pe, @IOPPC_renewal_due, @USCG_postponed_until, @USCG_due_date, @p1, @Pumps, @Pum" +
                "p_capacity, @Remarks, @VSL_CODE, @SMC_TYPE, @CLASS, @SHIPYARD, @SHIP_NO, @LENGTH" +
                ", @BREATH, @DRAFT, @NET_TON, @DEAD_WEIGHT, @KEEL_LAID, @DELIVERY_DATE, @AGE, @TR" +
                "ADE, @CREW, @NATIONALITY, @IMO_NO, @GRT, @Delivery, @Flag, @ME_Maker, @ME_Type, " +
                "@ME_Output, @METC_Type, @DE_Maeker, @DE_Type, @DE_No, @DE_Output, @DETC_Type, @G" +
                "EN_Maker, @GEN_Capacity, @GEN_lubrication, @GEN_Lub_oil, @GEN_lub_qty, @AB_Maker" +
                ", @AB_Type, @AB_Capacity, @Burner_Maker, @Buner_Type, @Buner_FO_consumpt, @AB_Bo" +
                "iler_Water, @Charterer, @CharterPeriod, @BoilerSurvay, @CraneLoadTest, @CraneAnn" +
                "ual);\r\nSELECT ID, [VESSEL NAME], [Prop shaft draw], [Nxt Nxt Dock], Type, [IOPPC" +
                " renewal due], [USCG postponed until], [USCG due date], [Ballast water capacity(" +
                "m3)], Pumps, [Pump capacity], Remarks, [VSL CODE], [SMC TYPE], CLASS, SHIPYARD, " +
                "[SHIP NO], LENGTH, BREATH, DRAFT, [NET TON], [DEAD WEIGHT], [KEEL LAID], [DELIVE" +
                "RY DATE], AGE, TRADE, CREW, NATIONALITY, [IMO NO], GRT, Delivery, Flag, [ME Make" +
                "r], [ME Type], [ME Output], [METC Type], [DE Maeker], [DE Type], [DE No], [DE Ou" +
                "tput], [DETC Type], [GEN Maker], [GEN Capacity], [GEN lubrication], [GEN Lub oil" +
                "], [GEN lub qty], [AB Maker], [AB Type], [AB Capacity], [Burner Maker], [Buner T" +
                "ype], [Buner FO consumpt], [AB Boiler Water], Charterer, CharterPeriod, BoilerSu" +
                "rvay, CraneLoadTest, CraneAnnual FROM General_Fleet_information WHERE (ID = SCOP" +
                "E_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VESSEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VESSEL NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Prop_shaft_draw", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Prop shaft draw", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nxt_Nxt_Dock", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nxt Nxt Dock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IOPPC_renewal_due", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IOPPC renewal due", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USCG_postponed_until", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USCG postponed until", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USCG_due_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USCG due date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ballast water capacity(m3)", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pumps", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pumps", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pump_capacity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pump capacity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remarks", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remarks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VSL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VSL CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMC_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMC TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLASS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLASS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SHIPYARD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIPYARD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SHIP_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIP NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LENGTH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LENGTH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BREATH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BREATH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DRAFT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DRAFT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NET_TON", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NET TON", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEAD_WEIGHT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEAD WEIGHT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEEL_LAID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEEL LAID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DELIVERY_DATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DELIVERY DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AGE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TRADE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TRADE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREW", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NATIONALITY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NATIONALITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IMO_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IMO NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Delivery", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Delivery", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Flag", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ME_Maker", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ME Maker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ME_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ME Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ME_Output", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ME Output", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@METC_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "METC Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DE_Maeker", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DE Maeker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DE_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DE Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DE_No", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DE No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DE_Output", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DE Output", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DETC_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DETC Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GEN_Maker", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GEN Maker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GEN_Capacity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GEN Capacity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GEN_lubrication", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GEN lubrication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GEN_Lub_oil", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GEN Lub oil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GEN_lub_qty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GEN lub qty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AB_Maker", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB Maker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AB_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AB_Capacity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB Capacity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Burner_Maker", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Burner Maker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Buner_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Buner Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Buner_FO_consumpt", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Buner FO consumpt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AB_Boiler_Water", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB Boiler Water", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Charterer", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Charterer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CharterPeriod", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CharterPeriod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BoilerSurvay", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoilerSurvay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CraneLoadTest", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CraneLoadTest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CraneAnnual", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CraneAnnual", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[General_Fleet_information] SET [VESSEL NAME] = @VESSEL_NAME, [Prop " +
                "shaft draw] = @Prop_shaft_draw, [Nxt Nxt Dock] = @Nxt_Nxt_Dock, [Type] = @Type, " +
                "[IOPPC renewal due] = @IOPPC_renewal_due, [USCG postponed until] = @USCG_postpon" +
                "ed_until, [USCG due date] = @USCG_due_date, [Ballast water capacity(m3)] = @p1, " +
                "[Pumps] = @Pumps, [Pump capacity] = @Pump_capacity, [Remarks] = @Remarks, [VSL C" +
                "ODE] = @VSL_CODE, [SMC TYPE] = @SMC_TYPE, [CLASS] = @CLASS, [SHIPYARD] = @SHIPYA" +
                "RD, [SHIP NO] = @SHIP_NO, [LENGTH] = @LENGTH, [BREATH] = @BREATH, [DRAFT] = @DRA" +
                "FT, [NET TON] = @NET_TON, [DEAD WEIGHT] = @DEAD_WEIGHT, [KEEL LAID] = @KEEL_LAID" +
                ", [DELIVERY DATE] = @DELIVERY_DATE, [AGE] = @AGE, [TRADE] = @TRADE, [CREW] = @CR" +
                "EW, [NATIONALITY] = @NATIONALITY, [IMO NO] = @IMO_NO, [GRT] = @GRT, [Delivery] =" +
                " @Delivery, [Flag] = @Flag, [ME Maker] = @ME_Maker, [ME Type] = @ME_Type, [ME Ou" +
                "tput] = @ME_Output, [METC Type] = @METC_Type, [DE Maeker] = @DE_Maeker, [DE Type" +
                "] = @DE_Type, [DE No] = @DE_No, [DE Output] = @DE_Output, [DETC Type] = @DETC_Ty" +
                "pe, [GEN Maker] = @GEN_Maker, [GEN Capacity] = @GEN_Capacity, [GEN lubrication] " +
                "= @GEN_lubrication, [GEN Lub oil] = @GEN_Lub_oil, [GEN lub qty] = @GEN_lub_qty, " +
                "[AB Maker] = @AB_Maker, [AB Type] = @AB_Type, [AB Capacity] = @AB_Capacity, [Bur" +
                "ner Maker] = @Burner_Maker, [Buner Type] = @Buner_Type, [Buner FO consumpt] = @B" +
                "uner_FO_consumpt, [AB Boiler Water] = @AB_Boiler_Water, [Charterer] = @Charterer" +
                ", [CharterPeriod] = @CharterPeriod, [BoilerSurvay] = @BoilerSurvay, [CraneLoadTe" +
                "st] = @CraneLoadTest, [CraneAnnual] = @CraneAnnual WHERE (([ID] = @Original_ID) " +
                "AND ((@IsNull_VESSEL_NAME = 1 AND [VESSEL NAME] IS NULL) OR ([VESSEL NAME] = @Or" +
                "iginal_VESSEL_NAME)) AND ((@IsNull_Prop_shaft_draw = 1 AND [Prop shaft draw] IS " +
                "NULL) OR ([Prop shaft draw] = @Original_Prop_shaft_draw)) AND ((@IsNull_Nxt_Nxt_" +
                "Dock = 1 AND [Nxt Nxt Dock] IS NULL) OR ([Nxt Nxt Dock] = @Original_Nxt_Nxt_Dock" +
                ")) AND ((@IsNull_IOPPC_renewal_due = 1 AND [IOPPC renewal due] IS NULL) OR ([IOP" +
                "PC renewal due] = @Original_IOPPC_renewal_due)) AND ((@IsNull_USCG_postponed_unt" +
                "il = 1 AND [USCG postponed until] IS NULL) OR ([USCG postponed until] = @Origina" +
                "l_USCG_postponed_until)) AND ((@IsNull_USCG_due_date = 1 AND [USCG due date] IS " +
                "NULL) OR ([USCG due date] = @Original_USCG_due_date)) AND ((@p3 = 1 AND [Ballast" +
                " water capacity(m3)] IS NULL) OR ([Ballast water capacity(m3)] = @p2)) AND ((@Is" +
                "Null_Charterer = 1 AND [Charterer] IS NULL) OR ([Charterer] = @Original_Chartere" +
                "r)) AND ((@IsNull_BoilerSurvay = 1 AND [BoilerSurvay] IS NULL) OR ([BoilerSurvay" +
                "] = @Original_BoilerSurvay)) AND ((@IsNull_CraneLoadTest = 1 AND [CraneLoadTest]" +
                " IS NULL) OR ([CraneLoadTest] = @Original_CraneLoadTest)) AND ((@IsNull_CraneAnn" +
                "ual = 1 AND [CraneAnnual] IS NULL) OR ([CraneAnnual] = @Original_CraneAnnual)));" +
                "\r\nSELECT ID, [VESSEL NAME], [Prop shaft draw], [Nxt Nxt Dock], Type, [IOPPC rene" +
                "wal due], [USCG postponed until], [USCG due date], [Ballast water capacity(m3)]," +
                " Pumps, [Pump capacity], Remarks, [VSL CODE], [SMC TYPE], CLASS, SHIPYARD, [SHIP" +
                " NO], LENGTH, BREATH, DRAFT, [NET TON], [DEAD WEIGHT], [KEEL LAID], [DELIVERY DA" +
                "TE], AGE, TRADE, CREW, NATIONALITY, [IMO NO], GRT, Delivery, Flag, [ME Maker], [" +
                "ME Type], [ME Output], [METC Type], [DE Maeker], [DE Type], [DE No], [DE Output]" +
                ", [DETC Type], [GEN Maker], [GEN Capacity], [GEN lubrication], [GEN Lub oil], [G" +
                "EN lub qty], [AB Maker], [AB Type], [AB Capacity], [Burner Maker], [Buner Type]," +
                " [Buner FO consumpt], [AB Boiler Water], Charterer, CharterPeriod, BoilerSurvay," +
                " CraneLoadTest, CraneAnnual FROM General_Fleet_information WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VESSEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VESSEL NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Prop_shaft_draw", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Prop shaft draw", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nxt_Nxt_Dock", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nxt Nxt Dock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IOPPC_renewal_due", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IOPPC renewal due", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USCG_postponed_until", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USCG postponed until", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USCG_due_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USCG due date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ballast water capacity(m3)", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pumps", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pumps", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pump_capacity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pump capacity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remarks", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remarks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VSL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VSL CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMC_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMC TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLASS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLASS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SHIPYARD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIPYARD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SHIP_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIP NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LENGTH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LENGTH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BREATH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BREATH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DRAFT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DRAFT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NET_TON", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NET TON", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEAD_WEIGHT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEAD WEIGHT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEEL_LAID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEEL LAID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DELIVERY_DATE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DELIVERY DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AGE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TRADE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TRADE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREW", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NATIONALITY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NATIONALITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IMO_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IMO NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Delivery", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Delivery", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Flag", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ME_Maker", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ME Maker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ME_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ME Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ME_Output", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ME Output", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@METC_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "METC Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DE_Maeker", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DE Maeker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DE_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DE Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DE_No", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DE No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DE_Output", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DE Output", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DETC_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DETC Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GEN_Maker", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GEN Maker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GEN_Capacity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GEN Capacity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GEN_lubrication", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GEN lubrication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GEN_Lub_oil", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GEN Lub oil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GEN_lub_qty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GEN lub qty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AB_Maker", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB Maker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AB_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AB_Capacity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB Capacity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Burner_Maker", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Burner Maker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Buner_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Buner Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Buner_FO_consumpt", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Buner FO consumpt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AB_Boiler_Water", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB Boiler Water", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Charterer", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Charterer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CharterPeriod", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CharterPeriod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BoilerSurvay", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoilerSurvay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CraneLoadTest", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CraneLoadTest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CraneAnnual", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CraneAnnual", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VESSEL_NAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VESSEL NAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VESSEL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VESSEL NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Prop_shaft_draw", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Prop shaft draw", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Prop_shaft_draw", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Prop shaft draw", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nxt_Nxt_Dock", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nxt Nxt Dock", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nxt_Nxt_Dock", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nxt Nxt Dock", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IOPPC_renewal_due", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IOPPC renewal due", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IOPPC_renewal_due", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IOPPC renewal due", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USCG_postponed_until", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USCG postponed until", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USCG_postponed_until", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USCG postponed until", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USCG_due_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USCG due date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USCG_due_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USCG due date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ballast water capacity(m3)", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ballast water capacity(m3)", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Charterer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Charterer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Charterer", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Charterer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BoilerSurvay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoilerSurvay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BoilerSurvay", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoilerSurvay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CraneLoadTest", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CraneLoadTest", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CraneLoadTest", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CraneLoadTest", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CraneAnnual", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CraneAnnual", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CraneAnnual", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CraneAnnual", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GeneralInfo.Properties.Settings.Default.AZUREDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, [VESSEL NAME], [Prop shaft draw], [Nxt Nxt Dock], Type, [IOPPC renewal due], [USCG postponed until], [USCG due date], [Ballast water capacity(m3)], Pumps, [Pump capacity], Remarks, [VSL CODE], [SMC TYPE], CLASS, SHIPYARD, [SHIP NO], LENGTH, BREATH, DRAFT, [NET TON], [DEAD WEIGHT], [KEEL LAID], [DELIVERY DATE], AGE, TRADE, CREW, NATIONALITY, [IMO NO], GRT, Delivery, Flag, [ME Maker], [ME Type], [ME Output], [METC Type], [DE Maeker], [DE Type], [DE No], [DE Output], [DETC Type], [GEN Maker], [GEN Capacity], [GEN lubrication], [GEN Lub oil], [GEN lub qty], [AB Maker], [AB Type], [AB Capacity], [Burner Maker], [Buner Type], [Buner FO consumpt], [AB Boiler Water], Charterer, CharterPeriod, BoilerSurvay, CraneLoadTest, CraneAnnual FROM dbo.General_Fleet_information";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AZUREDBDataSet.General_Fleet_informationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AZUREDBDataSet.General_Fleet_informationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AZUREDBDataSet.General_Fleet_informationDataTable dataTable = new AZUREDBDataSet.General_Fleet_informationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AZUREDBDataSet.General_Fleet_informationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AZUREDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "General_Fleet_information");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_VESSEL_NAME, global::System.Nullable<global::System.DateTime> Original_Prop_shaft_draw, global::System.Nullable<global::System.DateTime> Original_Nxt_Nxt_Dock, global::System.Nullable<global::System.DateTime> Original_IOPPC_renewal_due, global::System.Nullable<global::System.DateTime> Original_USCG_postponed_until, global::System.Nullable<global::System.DateTime> Original_USCG_due_date, global::System.Nullable<decimal> p2, string Original_Charterer, global::System.Nullable<global::System.DateTime> Original_BoilerSurvay, global::System.Nullable<global::System.DateTime> Original_CraneLoadTest, global::System.Nullable<global::System.DateTime> Original_CraneAnnual) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_VESSEL_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_VESSEL_NAME));
            }
            if ((Original_Prop_shaft_draw.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Prop_shaft_draw.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_Nxt_Nxt_Dock.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_Nxt_Nxt_Dock.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_IOPPC_renewal_due.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_IOPPC_renewal_due.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_USCG_postponed_until.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_USCG_postponed_until.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_USCG_due_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_USCG_due_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(p2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Charterer == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Charterer));
            }
            if ((Original_BoilerSurvay.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_BoilerSurvay.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_CraneLoadTest.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((System.DateTime)(Original_CraneLoadTest.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_CraneAnnual.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((System.DateTime)(Original_CraneAnnual.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string VESSEL_NAME, 
                    global::System.Nullable<global::System.DateTime> Prop_shaft_draw, 
                    global::System.Nullable<global::System.DateTime> Nxt_Nxt_Dock, 
                    string Type, 
                    global::System.Nullable<global::System.DateTime> IOPPC_renewal_due, 
                    global::System.Nullable<global::System.DateTime> USCG_postponed_until, 
                    global::System.Nullable<global::System.DateTime> USCG_due_date, 
                    global::System.Nullable<decimal> p1, 
                    string Pumps, 
                    string Pump_capacity, 
                    string Remarks, 
                    string VSL_CODE, 
                    string SMC_TYPE, 
                    string CLASS, 
                    string SHIPYARD, 
                    string SHIP_NO, 
                    string LENGTH, 
                    string BREATH, 
                    string DRAFT, 
                    string NET_TON, 
                    string DEAD_WEIGHT, 
                    string KEEL_LAID, 
                    string DELIVERY_DATE, 
                    string AGE, 
                    string TRADE, 
                    string CREW, 
                    string NATIONALITY, 
                    string IMO_NO, 
                    string GRT, 
                    string Delivery, 
                    string Flag, 
                    string ME_Maker, 
                    string ME_Type, 
                    string ME_Output, 
                    string METC_Type, 
                    string DE_Maeker, 
                    string DE_Type, 
                    string DE_No, 
                    string DE_Output, 
                    string DETC_Type, 
                    string GEN_Maker, 
                    string GEN_Capacity, 
                    string GEN_lubrication, 
                    string GEN_Lub_oil, 
                    string GEN_lub_qty, 
                    string AB_Maker, 
                    string AB_Type, 
                    string AB_Capacity, 
                    string Burner_Maker, 
                    string Buner_Type, 
                    string Buner_FO_consumpt, 
                    string AB_Boiler_Water, 
                    string Charterer, 
                    string CharterPeriod, 
                    global::System.Nullable<global::System.DateTime> BoilerSurvay, 
                    global::System.Nullable<global::System.DateTime> CraneLoadTest, 
                    global::System.Nullable<global::System.DateTime> CraneAnnual) {
            if ((VESSEL_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(VESSEL_NAME));
            }
            if ((Prop_shaft_draw.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Prop_shaft_draw.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Nxt_Nxt_Dock.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Nxt_Nxt_Dock.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Type == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Type));
            }
            if ((IOPPC_renewal_due.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(IOPPC_renewal_due.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((USCG_postponed_until.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(USCG_postponed_until.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((USCG_due_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(USCG_due_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((p1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(p1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Pumps == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Pumps));
            }
            if ((Pump_capacity == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Pump_capacity));
            }
            if ((Remarks == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Remarks));
            }
            if ((VSL_CODE == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(VSL_CODE));
            }
            if ((SMC_TYPE == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(SMC_TYPE));
            }
            if ((CLASS == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(CLASS));
            }
            if ((SHIPYARD == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(SHIPYARD));
            }
            if ((SHIP_NO == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(SHIP_NO));
            }
            if ((LENGTH == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(LENGTH));
            }
            if ((BREATH == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(BREATH));
            }
            if ((DRAFT == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(DRAFT));
            }
            if ((NET_TON == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(NET_TON));
            }
            if ((DEAD_WEIGHT == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(DEAD_WEIGHT));
            }
            if ((KEEL_LAID == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(KEEL_LAID));
            }
            if ((DELIVERY_DATE == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(DELIVERY_DATE));
            }
            if ((AGE == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(AGE));
            }
            if ((TRADE == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(TRADE));
            }
            if ((CREW == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(CREW));
            }
            if ((NATIONALITY == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(NATIONALITY));
            }
            if ((IMO_NO == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(IMO_NO));
            }
            if ((GRT == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(GRT));
            }
            if ((Delivery == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(Delivery));
            }
            if ((Flag == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(Flag));
            }
            if ((ME_Maker == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(ME_Maker));
            }
            if ((ME_Type == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(ME_Type));
            }
            if ((ME_Output == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(ME_Output));
            }
            if ((METC_Type == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(METC_Type));
            }
            if ((DE_Maeker == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(DE_Maeker));
            }
            if ((DE_Type == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(DE_Type));
            }
            if ((DE_No == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(DE_No));
            }
            if ((DE_Output == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(DE_Output));
            }
            if ((DETC_Type == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(DETC_Type));
            }
            if ((GEN_Maker == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(GEN_Maker));
            }
            if ((GEN_Capacity == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(GEN_Capacity));
            }
            if ((GEN_lubrication == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(GEN_lubrication));
            }
            if ((GEN_Lub_oil == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(GEN_Lub_oil));
            }
            if ((GEN_lub_qty == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(GEN_lub_qty));
            }
            if ((AB_Maker == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(AB_Maker));
            }
            if ((AB_Type == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(AB_Type));
            }
            if ((AB_Capacity == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(AB_Capacity));
            }
            if ((Burner_Maker == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(Burner_Maker));
            }
            if ((Buner_Type == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(Buner_Type));
            }
            if ((Buner_FO_consumpt == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(Buner_FO_consumpt));
            }
            if ((AB_Boiler_Water == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(AB_Boiler_Water));
            }
            if ((Charterer == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(Charterer));
            }
            if ((CharterPeriod == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(CharterPeriod));
            }
            if ((BoilerSurvay.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((System.DateTime)(BoilerSurvay.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((CraneLoadTest.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((System.DateTime)(CraneLoadTest.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((CraneAnnual.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((System.DateTime)(CraneAnnual.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string VESSEL_NAME, 
                    global::System.Nullable<global::System.DateTime> Prop_shaft_draw, 
                    global::System.Nullable<global::System.DateTime> Nxt_Nxt_Dock, 
                    string Type, 
                    global::System.Nullable<global::System.DateTime> IOPPC_renewal_due, 
                    global::System.Nullable<global::System.DateTime> USCG_postponed_until, 
                    global::System.Nullable<global::System.DateTime> USCG_due_date, 
                    global::System.Nullable<decimal> p1, 
                    string Pumps, 
                    string Pump_capacity, 
                    string Remarks, 
                    string VSL_CODE, 
                    string SMC_TYPE, 
                    string CLASS, 
                    string SHIPYARD, 
                    string SHIP_NO, 
                    string LENGTH, 
                    string BREATH, 
                    string DRAFT, 
                    string NET_TON, 
                    string DEAD_WEIGHT, 
                    string KEEL_LAID, 
                    string DELIVERY_DATE, 
                    string AGE, 
                    string TRADE, 
                    string CREW, 
                    string NATIONALITY, 
                    string IMO_NO, 
                    string GRT, 
                    string Delivery, 
                    string Flag, 
                    string ME_Maker, 
                    string ME_Type, 
                    string ME_Output, 
                    string METC_Type, 
                    string DE_Maeker, 
                    string DE_Type, 
                    string DE_No, 
                    string DE_Output, 
                    string DETC_Type, 
                    string GEN_Maker, 
                    string GEN_Capacity, 
                    string GEN_lubrication, 
                    string GEN_Lub_oil, 
                    string GEN_lub_qty, 
                    string AB_Maker, 
                    string AB_Type, 
                    string AB_Capacity, 
                    string Burner_Maker, 
                    string Buner_Type, 
                    string Buner_FO_consumpt, 
                    string AB_Boiler_Water, 
                    string Charterer, 
                    string CharterPeriod, 
                    global::System.Nullable<global::System.DateTime> BoilerSurvay, 
                    global::System.Nullable<global::System.DateTime> CraneLoadTest, 
                    global::System.Nullable<global::System.DateTime> CraneAnnual, 
                    int Original_ID, 
                    string Original_VESSEL_NAME, 
                    global::System.Nullable<global::System.DateTime> Original_Prop_shaft_draw, 
                    global::System.Nullable<global::System.DateTime> Original_Nxt_Nxt_Dock, 
                    global::System.Nullable<global::System.DateTime> Original_IOPPC_renewal_due, 
                    global::System.Nullable<global::System.DateTime> Original_USCG_postponed_until, 
                    global::System.Nullable<global::System.DateTime> Original_USCG_due_date, 
                    global::System.Nullable<decimal> p2, 
                    string Original_Charterer, 
                    global::System.Nullable<global::System.DateTime> Original_BoilerSurvay, 
                    global::System.Nullable<global::System.DateTime> Original_CraneLoadTest, 
                    global::System.Nullable<global::System.DateTime> Original_CraneAnnual, 
                    int ID) {
            if ((VESSEL_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(VESSEL_NAME));
            }
            if ((Prop_shaft_draw.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Prop_shaft_draw.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Nxt_Nxt_Dock.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Nxt_Nxt_Dock.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Type == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Type));
            }
            if ((IOPPC_renewal_due.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(IOPPC_renewal_due.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((USCG_postponed_until.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(USCG_postponed_until.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((USCG_due_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(USCG_due_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((p1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(p1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Pumps == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Pumps));
            }
            if ((Pump_capacity == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Pump_capacity));
            }
            if ((Remarks == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Remarks));
            }
            if ((VSL_CODE == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(VSL_CODE));
            }
            if ((SMC_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(SMC_TYPE));
            }
            if ((CLASS == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(CLASS));
            }
            if ((SHIPYARD == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(SHIPYARD));
            }
            if ((SHIP_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(SHIP_NO));
            }
            if ((LENGTH == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(LENGTH));
            }
            if ((BREATH == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(BREATH));
            }
            if ((DRAFT == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(DRAFT));
            }
            if ((NET_TON == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(NET_TON));
            }
            if ((DEAD_WEIGHT == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(DEAD_WEIGHT));
            }
            if ((KEEL_LAID == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(KEEL_LAID));
            }
            if ((DELIVERY_DATE == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(DELIVERY_DATE));
            }
            if ((AGE == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(AGE));
            }
            if ((TRADE == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(TRADE));
            }
            if ((CREW == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(CREW));
            }
            if ((NATIONALITY == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(NATIONALITY));
            }
            if ((IMO_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(IMO_NO));
            }
            if ((GRT == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(GRT));
            }
            if ((Delivery == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Delivery));
            }
            if ((Flag == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Flag));
            }
            if ((ME_Maker == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(ME_Maker));
            }
            if ((ME_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(ME_Type));
            }
            if ((ME_Output == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(ME_Output));
            }
            if ((METC_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(METC_Type));
            }
            if ((DE_Maeker == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(DE_Maeker));
            }
            if ((DE_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(DE_Type));
            }
            if ((DE_No == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(DE_No));
            }
            if ((DE_Output == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(DE_Output));
            }
            if ((DETC_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(DETC_Type));
            }
            if ((GEN_Maker == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(GEN_Maker));
            }
            if ((GEN_Capacity == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(GEN_Capacity));
            }
            if ((GEN_lubrication == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(GEN_lubrication));
            }
            if ((GEN_Lub_oil == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(GEN_Lub_oil));
            }
            if ((GEN_lub_qty == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(GEN_lub_qty));
            }
            if ((AB_Maker == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(AB_Maker));
            }
            if ((AB_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(AB_Type));
            }
            if ((AB_Capacity == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(AB_Capacity));
            }
            if ((Burner_Maker == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Burner_Maker));
            }
            if ((Buner_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Buner_Type));
            }
            if ((Buner_FO_consumpt == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Buner_FO_consumpt));
            }
            if ((AB_Boiler_Water == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(AB_Boiler_Water));
            }
            if ((Charterer == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Charterer));
            }
            if ((CharterPeriod == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(CharterPeriod));
            }
            if ((BoilerSurvay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((System.DateTime)(BoilerSurvay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((CraneLoadTest.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((System.DateTime)(CraneLoadTest.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((CraneAnnual.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((System.DateTime)(CraneAnnual.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(Original_ID));
            if ((Original_VESSEL_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_VESSEL_NAME));
            }
            if ((Original_Prop_shaft_draw.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((System.DateTime)(Original_Prop_shaft_draw.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_Nxt_Nxt_Dock.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((System.DateTime)(Original_Nxt_Nxt_Dock.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_IOPPC_renewal_due.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((System.DateTime)(Original_IOPPC_renewal_due.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_USCG_postponed_until.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((System.DateTime)(Original_USCG_postponed_until.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_USCG_due_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((System.DateTime)(Original_USCG_due_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((decimal)(p2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_Charterer == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_Charterer));
            }
            if ((Original_BoilerSurvay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((System.DateTime)(Original_BoilerSurvay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_CraneLoadTest.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((System.DateTime)(Original_CraneLoadTest.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_CraneAnnual.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((System.DateTime)(Original_CraneAnnual.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[80].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string VESSEL_NAME, 
                    global::System.Nullable<global::System.DateTime> Prop_shaft_draw, 
                    global::System.Nullable<global::System.DateTime> Nxt_Nxt_Dock, 
                    string Type, 
                    global::System.Nullable<global::System.DateTime> IOPPC_renewal_due, 
                    global::System.Nullable<global::System.DateTime> USCG_postponed_until, 
                    global::System.Nullable<global::System.DateTime> USCG_due_date, 
                    global::System.Nullable<decimal> p1, 
                    string Pumps, 
                    string Pump_capacity, 
                    string Remarks, 
                    string VSL_CODE, 
                    string SMC_TYPE, 
                    string CLASS, 
                    string SHIPYARD, 
                    string SHIP_NO, 
                    string LENGTH, 
                    string BREATH, 
                    string DRAFT, 
                    string NET_TON, 
                    string DEAD_WEIGHT, 
                    string KEEL_LAID, 
                    string DELIVERY_DATE, 
                    string AGE, 
                    string TRADE, 
                    string CREW, 
                    string NATIONALITY, 
                    string IMO_NO, 
                    string GRT, 
                    string Delivery, 
                    string Flag, 
                    string ME_Maker, 
                    string ME_Type, 
                    string ME_Output, 
                    string METC_Type, 
                    string DE_Maeker, 
                    string DE_Type, 
                    string DE_No, 
                    string DE_Output, 
                    string DETC_Type, 
                    string GEN_Maker, 
                    string GEN_Capacity, 
                    string GEN_lubrication, 
                    string GEN_Lub_oil, 
                    string GEN_lub_qty, 
                    string AB_Maker, 
                    string AB_Type, 
                    string AB_Capacity, 
                    string Burner_Maker, 
                    string Buner_Type, 
                    string Buner_FO_consumpt, 
                    string AB_Boiler_Water, 
                    string Charterer, 
                    string CharterPeriod, 
                    global::System.Nullable<global::System.DateTime> BoilerSurvay, 
                    global::System.Nullable<global::System.DateTime> CraneLoadTest, 
                    global::System.Nullable<global::System.DateTime> CraneAnnual, 
                    int Original_ID, 
                    string Original_VESSEL_NAME, 
                    global::System.Nullable<global::System.DateTime> Original_Prop_shaft_draw, 
                    global::System.Nullable<global::System.DateTime> Original_Nxt_Nxt_Dock, 
                    global::System.Nullable<global::System.DateTime> Original_IOPPC_renewal_due, 
                    global::System.Nullable<global::System.DateTime> Original_USCG_postponed_until, 
                    global::System.Nullable<global::System.DateTime> Original_USCG_due_date, 
                    global::System.Nullable<decimal> p2, 
                    string Original_Charterer, 
                    global::System.Nullable<global::System.DateTime> Original_BoilerSurvay, 
                    global::System.Nullable<global::System.DateTime> Original_CraneLoadTest, 
                    global::System.Nullable<global::System.DateTime> Original_CraneAnnual) {
            return this.Update(VESSEL_NAME, Prop_shaft_draw, Nxt_Nxt_Dock, Type, IOPPC_renewal_due, USCG_postponed_until, USCG_due_date, p1, Pumps, Pump_capacity, Remarks, VSL_CODE, SMC_TYPE, CLASS, SHIPYARD, SHIP_NO, LENGTH, BREATH, DRAFT, NET_TON, DEAD_WEIGHT, KEEL_LAID, DELIVERY_DATE, AGE, TRADE, CREW, NATIONALITY, IMO_NO, GRT, Delivery, Flag, ME_Maker, ME_Type, ME_Output, METC_Type, DE_Maeker, DE_Type, DE_No, DE_Output, DETC_Type, GEN_Maker, GEN_Capacity, GEN_lubrication, GEN_Lub_oil, GEN_lub_qty, AB_Maker, AB_Type, AB_Capacity, Burner_Maker, Buner_Type, Buner_FO_consumpt, AB_Boiler_Water, Charterer, CharterPeriod, BoilerSurvay, CraneLoadTest, CraneAnnual, Original_ID, Original_VESSEL_NAME, Original_Prop_shaft_draw, Original_Nxt_Nxt_Dock, Original_IOPPC_renewal_due, Original_USCG_postponed_until, Original_USCG_due_date, p2, Original_Charterer, Original_BoilerSurvay, Original_CraneLoadTest, Original_CraneAnnual, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Ship_Master_TBTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public Ship_Master_TBTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Ship_Master_TB";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("OwnerGroup", "OwnerGroup");
            tableMapping.ColumnMappings.Add("PresentName", "PresentName");
            tableMapping.ColumnMappings.Add("Shortcharacter", "Shortcharacter");
            tableMapping.ColumnMappings.Add("IMONumber", "IMONumber");
            tableMapping.ColumnMappings.Add("FBBtelephone", "FBBtelephone");
            tableMapping.ColumnMappings.Add("FBBtelephoneShort", "FBBtelephoneShort");
            tableMapping.ColumnMappings.Add("FBBfacsimile", "FBBfacsimile");
            tableMapping.ColumnMappings.Add("InmFtelephone1", "InmFtelephone1");
            tableMapping.ColumnMappings.Add("InmFtelephone2", "InmFtelephone2");
            tableMapping.ColumnMappings.Add("InmFfacsimile", "InmFfacsimile");
            tableMapping.ColumnMappings.Add("InmCSATmail1", "InmCSATmail1");
            tableMapping.ColumnMappings.Add("InmCSATmail2", "InmCSATmail2");
            tableMapping.ColumnMappings.Add("email1", "email1");
            tableMapping.ColumnMappings.Add("email2", "email2");
            tableMapping.ColumnMappings.Add("LastUpdateforContacts", "LastUpdateforContacts");
            tableMapping.ColumnMappings.Add("PreviousName", "PreviousName");
            tableMapping.ColumnMappings.Add("ExOwner", "ExOwner");
            tableMapping.ColumnMappings.Add("Builder", "Builder");
            tableMapping.ColumnMappings.Add("BuldersShipNumber", "BuldersShipNumber");
            tableMapping.ColumnMappings.Add("BuildYear", "BuildYear");
            tableMapping.ColumnMappings.Add("Flag", "Flag");
            tableMapping.ColumnMappings.Add("Classification", "Classification");
            tableMapping.ColumnMappings.Add("TYPE", "TYPE");
            tableMapping.ColumnMappings.Add("LoA", "LoA");
            tableMapping.ColumnMappings.Add("BTH", "BTH");
            tableMapping.ColumnMappings.Add("DWT", "DWT");
            tableMapping.ColumnMappings.Add("Sold", "Sold");
            tableMapping.ColumnMappings.Add("PROwner", "PROwner");
            tableMapping.ColumnMappings.Add("Owner", "Owner");
            tableMapping.ColumnMappings.Add("Photofilename1", "Photofilename1");
            tableMapping.ColumnMappings.Add("Photofilename2", "Photofilename2");
            tableMapping.ColumnMappings.Add("PICID", "PICID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Ship_Master_TB] WHERE (([ID] = @Original_ID) AND ((@IsNull_Own" +
                "erGroup = 1 AND [OwnerGroup] IS NULL) OR ([OwnerGroup] = @Original_OwnerGroup)) " +
                "AND ((@IsNull_PresentName = 1 AND [PresentName] IS NULL) OR ([PresentName] = @Or" +
                "iginal_PresentName)) AND ((@IsNull_Shortcharacter = 1 AND [Shortcharacter] IS NU" +
                "LL) OR ([Shortcharacter] = @Original_Shortcharacter)) AND ((@IsNull_IMONumber = " +
                "1 AND [IMONumber] IS NULL) OR ([IMONumber] = @Original_IMONumber)) AND ((@IsNull" +
                "_FBBtelephone = 1 AND [FBBtelephone] IS NULL) OR ([FBBtelephone] = @Original_FBB" +
                "telephone)) AND ((@IsNull_FBBtelephoneShort = 1 AND [FBBtelephoneShort] IS NULL)" +
                " OR ([FBBtelephoneShort] = @Original_FBBtelephoneShort)) AND ((@IsNull_FBBfacsim" +
                "ile = 1 AND [FBBfacsimile] IS NULL) OR ([FBBfacsimile] = @Original_FBBfacsimile)" +
                ") AND ((@IsNull_InmFtelephone1 = 1 AND [InmFtelephone1] IS NULL) OR ([InmFteleph" +
                "one1] = @Original_InmFtelephone1)) AND ((@IsNull_InmFtelephone2 = 1 AND [InmFtel" +
                "ephone2] IS NULL) OR ([InmFtelephone2] = @Original_InmFtelephone2)) AND ((@IsNul" +
                "l_InmFfacsimile = 1 AND [InmFfacsimile] IS NULL) OR ([InmFfacsimile] = @Original" +
                "_InmFfacsimile)) AND ((@IsNull_InmCSATmail1 = 1 AND [InmCSATmail1] IS NULL) OR (" +
                "[InmCSATmail1] = @Original_InmCSATmail1)) AND ((@IsNull_InmCSATmail2 = 1 AND [In" +
                "mCSATmail2] IS NULL) OR ([InmCSATmail2] = @Original_InmCSATmail2)) AND ((@IsNull" +
                "_email1 = 1 AND [email1] IS NULL) OR ([email1] = @Original_email1)) AND ((@IsNul" +
                "l_email2 = 1 AND [email2] IS NULL) OR ([email2] = @Original_email2)) AND ((@IsNu" +
                "ll_LastUpdateforContacts = 1 AND [LastUpdateforContacts] IS NULL) OR ([LastUpdat" +
                "eforContacts] = @Original_LastUpdateforContacts)) AND ((@IsNull_PreviousName = 1" +
                " AND [PreviousName] IS NULL) OR ([PreviousName] = @Original_PreviousName)) AND (" +
                "(@IsNull_ExOwner = 1 AND [ExOwner] IS NULL) OR ([ExOwner] = @Original_ExOwner)) " +
                "AND ((@IsNull_Builder = 1 AND [Builder] IS NULL) OR ([Builder] = @Original_Build" +
                "er)) AND ((@IsNull_BuldersShipNumber = 1 AND [BuldersShipNumber] IS NULL) OR ([B" +
                "uldersShipNumber] = @Original_BuldersShipNumber)) AND ((@IsNull_BuildYear = 1 AN" +
                "D [BuildYear] IS NULL) OR ([BuildYear] = @Original_BuildYear)) AND ((@IsNull_Fla" +
                "g = 1 AND [Flag] IS NULL) OR ([Flag] = @Original_Flag)) AND ((@IsNull_Classifica" +
                "tion = 1 AND [Classification] IS NULL) OR ([Classification] = @Original_Classifi" +
                "cation)) AND ((@IsNull_TYPE = 1 AND [TYPE] IS NULL) OR ([TYPE] = @Original_TYPE)" +
                ") AND ((@IsNull_LoA = 1 AND [LoA] IS NULL) OR ([LoA] = @Original_LoA)) AND ((@Is" +
                "Null_BTH = 1 AND [BTH] IS NULL) OR ([BTH] = @Original_BTH)) AND ((@IsNull_DWT = " +
                "1 AND [DWT] IS NULL) OR ([DWT] = @Original_DWT)) AND ((@IsNull_Sold = 1 AND [Sol" +
                "d] IS NULL) OR ([Sold] = @Original_Sold)) AND ((@IsNull_PROwner = 1 AND [PROwner" +
                "] IS NULL) OR ([PROwner] = @Original_PROwner)) AND ((@IsNull_Owner = 1 AND [Owne" +
                "r] IS NULL) OR ([Owner] = @Original_Owner)) AND ((@IsNull_Photofilename1 = 1 AND" +
                " [Photofilename1] IS NULL) OR ([Photofilename1] = @Original_Photofilename1)) AND" +
                " ((@IsNull_Photofilename2 = 1 AND [Photofilename2] IS NULL) OR ([Photofilename2]" +
                " = @Original_Photofilename2)) AND ((@IsNull_PICID = 1 AND [PICID] IS NULL) OR ([" +
                "PICID] = @Original_PICID)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OwnerGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OwnerGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OwnerGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OwnerGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PresentName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PresentName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Shortcharacter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shortcharacter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Shortcharacter", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shortcharacter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IMONumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IMONumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IMONumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IMONumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FBBtelephone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FBBtelephone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FBBtelephone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FBBtelephone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FBBtelephoneShort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FBBtelephoneShort", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FBBtelephoneShort", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FBBtelephoneShort", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FBBfacsimile", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FBBfacsimile", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FBBfacsimile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FBBfacsimile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InmFtelephone1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmFtelephone1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InmFtelephone1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmFtelephone1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InmFtelephone2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmFtelephone2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InmFtelephone2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmFtelephone2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InmFfacsimile", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmFfacsimile", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InmFfacsimile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmFfacsimile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InmCSATmail1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmCSATmail1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InmCSATmail1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmCSATmail1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InmCSATmail2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmCSATmail2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InmCSATmail2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmCSATmail2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_email1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_email1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_email2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_email2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastUpdateforContacts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdateforContacts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdateforContacts", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdateforContacts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PreviousName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PreviousName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PreviousName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PreviousName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExOwner", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExOwner", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExOwner", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExOwner", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Builder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Builder", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Builder", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Builder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BuldersShipNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuldersShipNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BuldersShipNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuldersShipNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BuildYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuildYear", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BuildYear", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuildYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Flag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Flag", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Classification", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Classification", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Classification", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Classification", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LoA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LoA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BTH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BTH", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BTH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BTH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DWT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DWT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DWT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DWT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sold", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sold", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sold", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PROwner", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROwner", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PROwner", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROwner", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Owner", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Owner", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Owner", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Owner", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Photofilename1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Photofilename1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Photofilename1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Photofilename1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Photofilename2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Photofilename2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Photofilename2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Photofilename2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PICID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PICID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PICID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PICID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Ship_Master_TB] ([ID], [OwnerGroup], [PresentName], [Shortcharacter], [IMONumber], [FBBtelephone], [FBBtelephoneShort], [FBBfacsimile], [InmFtelephone1], [InmFtelephone2], [InmFfacsimile], [InmCSATmail1], [InmCSATmail2], [email1], [email2], [LastUpdateforContacts], [PreviousName], [ExOwner], [Builder], [BuldersShipNumber], [BuildYear], [Flag], [Classification], [TYPE], [LoA], [BTH], [DWT], [Sold], [PROwner], [Owner], [Photofilename1], [Photofilename2], [PICID]) VALUES (@ID, @OwnerGroup, @PresentName, @Shortcharacter, @IMONumber, @FBBtelephone, @FBBtelephoneShort, @FBBfacsimile, @InmFtelephone1, @InmFtelephone2, @InmFfacsimile, @InmCSATmail1, @InmCSATmail2, @email1, @email2, @LastUpdateforContacts, @PreviousName, @ExOwner, @Builder, @BuldersShipNumber, @BuildYear, @Flag, @Classification, @TYPE, @LoA, @BTH, @DWT, @Sold, @PROwner, @Owner, @Photofilename1, @Photofilename2, @PICID);
SELECT ID, OwnerGroup, PresentName, Shortcharacter, IMONumber, FBBtelephone, FBBtelephoneShort, FBBfacsimile, InmFtelephone1, InmFtelephone2, InmFfacsimile, InmCSATmail1, InmCSATmail2, email1, email2, LastUpdateforContacts, PreviousName, ExOwner, Builder, BuldersShipNumber, BuildYear, Flag, Classification, TYPE, LoA, BTH, DWT, Sold, PROwner, Owner, Photofilename1, Photofilename2, PICID FROM Ship_Master_TB WHERE (ID = @ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OwnerGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OwnerGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PresentName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shortcharacter", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shortcharacter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IMONumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IMONumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FBBtelephone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FBBtelephone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FBBtelephoneShort", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FBBtelephoneShort", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FBBfacsimile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FBBfacsimile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InmFtelephone1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmFtelephone1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InmFtelephone2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmFtelephone2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InmFfacsimile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmFfacsimile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InmCSATmail1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmCSATmail1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InmCSATmail2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmCSATmail2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdateforContacts", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdateforContacts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PreviousName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PreviousName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExOwner", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExOwner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Builder", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Builder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BuldersShipNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuldersShipNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BuildYear", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuildYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Flag", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Classification", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Classification", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BTH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BTH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DWT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DWT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sold", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sold", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PROwner", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROwner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Owner", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Owner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Photofilename1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Photofilename1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Photofilename2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Photofilename2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PICID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PICID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Ship_Master_TB] SET [ID] = @ID, [OwnerGroup] = @OwnerGroup, [Presen" +
                "tName] = @PresentName, [Shortcharacter] = @Shortcharacter, [IMONumber] = @IMONum" +
                "ber, [FBBtelephone] = @FBBtelephone, [FBBtelephoneShort] = @FBBtelephoneShort, [" +
                "FBBfacsimile] = @FBBfacsimile, [InmFtelephone1] = @InmFtelephone1, [InmFtelephon" +
                "e2] = @InmFtelephone2, [InmFfacsimile] = @InmFfacsimile, [InmCSATmail1] = @InmCS" +
                "ATmail1, [InmCSATmail2] = @InmCSATmail2, [email1] = @email1, [email2] = @email2," +
                " [LastUpdateforContacts] = @LastUpdateforContacts, [PreviousName] = @PreviousNam" +
                "e, [ExOwner] = @ExOwner, [Builder] = @Builder, [BuldersShipNumber] = @BuldersShi" +
                "pNumber, [BuildYear] = @BuildYear, [Flag] = @Flag, [Classification] = @Classific" +
                "ation, [TYPE] = @TYPE, [LoA] = @LoA, [BTH] = @BTH, [DWT] = @DWT, [Sold] = @Sold," +
                " [PROwner] = @PROwner, [Owner] = @Owner, [Photofilename1] = @Photofilename1, [Ph" +
                "otofilename2] = @Photofilename2, [PICID] = @PICID WHERE (([ID] = @Original_ID) A" +
                "ND ((@IsNull_OwnerGroup = 1 AND [OwnerGroup] IS NULL) OR ([OwnerGroup] = @Origin" +
                "al_OwnerGroup)) AND ((@IsNull_PresentName = 1 AND [PresentName] IS NULL) OR ([Pr" +
                "esentName] = @Original_PresentName)) AND ((@IsNull_Shortcharacter = 1 AND [Short" +
                "character] IS NULL) OR ([Shortcharacter] = @Original_Shortcharacter)) AND ((@IsN" +
                "ull_IMONumber = 1 AND [IMONumber] IS NULL) OR ([IMONumber] = @Original_IMONumber" +
                ")) AND ((@IsNull_FBBtelephone = 1 AND [FBBtelephone] IS NULL) OR ([FBBtelephone]" +
                " = @Original_FBBtelephone)) AND ((@IsNull_FBBtelephoneShort = 1 AND [FBBtelephon" +
                "eShort] IS NULL) OR ([FBBtelephoneShort] = @Original_FBBtelephoneShort)) AND ((@" +
                "IsNull_FBBfacsimile = 1 AND [FBBfacsimile] IS NULL) OR ([FBBfacsimile] = @Origin" +
                "al_FBBfacsimile)) AND ((@IsNull_InmFtelephone1 = 1 AND [InmFtelephone1] IS NULL)" +
                " OR ([InmFtelephone1] = @Original_InmFtelephone1)) AND ((@IsNull_InmFtelephone2 " +
                "= 1 AND [InmFtelephone2] IS NULL) OR ([InmFtelephone2] = @Original_InmFtelephone" +
                "2)) AND ((@IsNull_InmFfacsimile = 1 AND [InmFfacsimile] IS NULL) OR ([InmFfacsim" +
                "ile] = @Original_InmFfacsimile)) AND ((@IsNull_InmCSATmail1 = 1 AND [InmCSATmail" +
                "1] IS NULL) OR ([InmCSATmail1] = @Original_InmCSATmail1)) AND ((@IsNull_InmCSATm" +
                "ail2 = 1 AND [InmCSATmail2] IS NULL) OR ([InmCSATmail2] = @Original_InmCSATmail2" +
                ")) AND ((@IsNull_email1 = 1 AND [email1] IS NULL) OR ([email1] = @Original_email" +
                "1)) AND ((@IsNull_email2 = 1 AND [email2] IS NULL) OR ([email2] = @Original_emai" +
                "l2)) AND ((@IsNull_LastUpdateforContacts = 1 AND [LastUpdateforContacts] IS NULL" +
                ") OR ([LastUpdateforContacts] = @Original_LastUpdateforContacts)) AND ((@IsNull_" +
                "PreviousName = 1 AND [PreviousName] IS NULL) OR ([PreviousName] = @Original_Prev" +
                "iousName)) AND ((@IsNull_ExOwner = 1 AND [ExOwner] IS NULL) OR ([ExOwner] = @Ori" +
                "ginal_ExOwner)) AND ((@IsNull_Builder = 1 AND [Builder] IS NULL) OR ([Builder] =" +
                " @Original_Builder)) AND ((@IsNull_BuldersShipNumber = 1 AND [BuldersShipNumber]" +
                " IS NULL) OR ([BuldersShipNumber] = @Original_BuldersShipNumber)) AND ((@IsNull_" +
                "BuildYear = 1 AND [BuildYear] IS NULL) OR ([BuildYear] = @Original_BuildYear)) A" +
                "ND ((@IsNull_Flag = 1 AND [Flag] IS NULL) OR ([Flag] = @Original_Flag)) AND ((@I" +
                "sNull_Classification = 1 AND [Classification] IS NULL) OR ([Classification] = @O" +
                "riginal_Classification)) AND ((@IsNull_TYPE = 1 AND [TYPE] IS NULL) OR ([TYPE] =" +
                " @Original_TYPE)) AND ((@IsNull_LoA = 1 AND [LoA] IS NULL) OR ([LoA] = @Original" +
                "_LoA)) AND ((@IsNull_BTH = 1 AND [BTH] IS NULL) OR ([BTH] = @Original_BTH)) AND " +
                "((@IsNull_DWT = 1 AND [DWT] IS NULL) OR ([DWT] = @Original_DWT)) AND ((@IsNull_S" +
                "old = 1 AND [Sold] IS NULL) OR ([Sold] = @Original_Sold)) AND ((@IsNull_PROwner " +
                "= 1 AND [PROwner] IS NULL) OR ([PROwner] = @Original_PROwner)) AND ((@IsNull_Own" +
                "er = 1 AND [Owner] IS NULL) OR ([Owner] = @Original_Owner)) AND ((@IsNull_Photof" +
                "ilename1 = 1 AND [Photofilename1] IS NULL) OR ([Photofilename1] = @Original_Phot" +
                "ofilename1)) AND ((@IsNull_Photofilename2 = 1 AND [Photofilename2] IS NULL) OR (" +
                "[Photofilename2] = @Original_Photofilename2)) AND ((@IsNull_PICID = 1 AND [PICID" +
                "] IS NULL) OR ([PICID] = @Original_PICID)));\r\nSELECT ID, OwnerGroup, PresentName" +
                ", Shortcharacter, IMONumber, FBBtelephone, FBBtelephoneShort, FBBfacsimile, InmF" +
                "telephone1, InmFtelephone2, InmFfacsimile, InmCSATmail1, InmCSATmail2, email1, e" +
                "mail2, LastUpdateforContacts, PreviousName, ExOwner, Builder, BuldersShipNumber," +
                " BuildYear, Flag, Classification, TYPE, LoA, BTH, DWT, Sold, PROwner, Owner, Pho" +
                "tofilename1, Photofilename2, PICID FROM Ship_Master_TB WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OwnerGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OwnerGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PresentName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shortcharacter", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shortcharacter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IMONumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IMONumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FBBtelephone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FBBtelephone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FBBtelephoneShort", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FBBtelephoneShort", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FBBfacsimile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FBBfacsimile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InmFtelephone1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmFtelephone1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InmFtelephone2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmFtelephone2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InmFfacsimile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmFfacsimile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InmCSATmail1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmCSATmail1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InmCSATmail2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmCSATmail2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdateforContacts", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdateforContacts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PreviousName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PreviousName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExOwner", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExOwner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Builder", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Builder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BuldersShipNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuldersShipNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BuildYear", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuildYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Flag", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Classification", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Classification", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BTH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BTH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DWT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DWT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sold", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sold", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PROwner", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROwner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Owner", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Owner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Photofilename1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Photofilename1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Photofilename2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Photofilename2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PICID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PICID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OwnerGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OwnerGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OwnerGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OwnerGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PresentName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PresentName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Shortcharacter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shortcharacter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Shortcharacter", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shortcharacter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IMONumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IMONumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IMONumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IMONumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FBBtelephone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FBBtelephone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FBBtelephone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FBBtelephone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FBBtelephoneShort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FBBtelephoneShort", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FBBtelephoneShort", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FBBtelephoneShort", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FBBfacsimile", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FBBfacsimile", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FBBfacsimile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FBBfacsimile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InmFtelephone1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmFtelephone1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InmFtelephone1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmFtelephone1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InmFtelephone2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmFtelephone2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InmFtelephone2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmFtelephone2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InmFfacsimile", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmFfacsimile", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InmFfacsimile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmFfacsimile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InmCSATmail1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmCSATmail1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InmCSATmail1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmCSATmail1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InmCSATmail2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmCSATmail2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InmCSATmail2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InmCSATmail2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_email1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_email1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_email2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_email2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastUpdateforContacts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdateforContacts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdateforContacts", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdateforContacts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PreviousName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PreviousName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PreviousName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PreviousName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExOwner", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExOwner", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExOwner", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExOwner", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Builder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Builder", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Builder", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Builder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BuldersShipNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuldersShipNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BuldersShipNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuldersShipNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BuildYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuildYear", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BuildYear", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuildYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Flag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Flag", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Classification", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Classification", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Classification", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Classification", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LoA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LoA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BTH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BTH", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BTH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BTH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DWT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DWT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DWT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DWT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sold", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sold", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sold", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PROwner", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROwner", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PROwner", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROwner", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Owner", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Owner", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Owner", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Owner", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Photofilename1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Photofilename1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Photofilename1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Photofilename1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Photofilename2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Photofilename2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Photofilename2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Photofilename2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PICID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PICID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PICID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PICID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GeneralInfo.Properties.Settings.Default.AZUREDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, OwnerGroup, PresentName, Shortcharacter, IMONumber, FBBtelephone, FBBtelephoneShort, FBBfacsimile, InmFtelephone1, InmFtelephone2, InmFfacsimile, InmCSATmail1, InmCSATmail2, email1, email2, LastUpdateforContacts, PreviousName, ExOwner, Builder, BuldersShipNumber, BuildYear, Flag, Classification, TYPE, LoA, BTH, DWT, Sold, PROwner, Owner, Photofilename1, Photofilename2, PICID FROM dbo.Ship_Master_TB";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AZUREDBDataSet.Ship_Master_TBDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AZUREDBDataSet.Ship_Master_TBDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AZUREDBDataSet.Ship_Master_TBDataTable dataTable = new AZUREDBDataSet.Ship_Master_TBDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AZUREDBDataSet.Ship_Master_TBDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AZUREDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Ship_Master_TB");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ID, 
                    global::System.Nullable<int> Original_OwnerGroup, 
                    string Original_PresentName, 
                    string Original_Shortcharacter, 
                    string Original_IMONumber, 
                    string Original_FBBtelephone, 
                    string Original_FBBtelephoneShort, 
                    string Original_FBBfacsimile, 
                    string Original_InmFtelephone1, 
                    string Original_InmFtelephone2, 
                    string Original_InmFfacsimile, 
                    string Original_InmCSATmail1, 
                    string Original_InmCSATmail2, 
                    string Original_email1, 
                    string Original_email2, 
                    string Original_LastUpdateforContacts, 
                    string Original_PreviousName, 
                    string Original_ExOwner, 
                    string Original_Builder, 
                    string Original_BuldersShipNumber, 
                    global::System.Nullable<global::System.DateTime> Original_BuildYear, 
                    string Original_Flag, 
                    string Original_Classification, 
                    string Original_TYPE, 
                    string Original_LoA, 
                    string Original_BTH, 
                    string Original_DWT, 
                    string Original_Sold, 
                    string Original_PROwner, 
                    string Original_Owner, 
                    string Original_Photofilename1, 
                    string Original_Photofilename2, 
                    global::System.Nullable<int> Original_PICID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_OwnerGroup.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_OwnerGroup.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_PresentName == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PresentName));
            }
            if ((Original_Shortcharacter == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Shortcharacter));
            }
            if ((Original_IMONumber == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_IMONumber));
            }
            if ((Original_FBBtelephone == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_FBBtelephone));
            }
            if ((Original_FBBtelephoneShort == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_FBBtelephoneShort));
            }
            if ((Original_FBBfacsimile == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_FBBfacsimile));
            }
            if ((Original_InmFtelephone1 == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_InmFtelephone1));
            }
            if ((Original_InmFtelephone2 == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_InmFtelephone2));
            }
            if ((Original_InmFfacsimile == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_InmFfacsimile));
            }
            if ((Original_InmCSATmail1 == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_InmCSATmail1));
            }
            if ((Original_InmCSATmail2 == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_InmCSATmail2));
            }
            if ((Original_email1 == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_email1));
            }
            if ((Original_email2 == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_email2));
            }
            if ((Original_LastUpdateforContacts == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_LastUpdateforContacts));
            }
            if ((Original_PreviousName == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_PreviousName));
            }
            if ((Original_ExOwner == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_ExOwner));
            }
            if ((Original_Builder == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_Builder));
            }
            if ((Original_BuldersShipNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_BuldersShipNumber));
            }
            if ((Original_BuildYear.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((System.DateTime)(Original_BuildYear.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_Flag == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_Flag));
            }
            if ((Original_Classification == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_Classification));
            }
            if ((Original_TYPE == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_TYPE));
            }
            if ((Original_LoA == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_LoA));
            }
            if ((Original_BTH == null)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_BTH));
            }
            if ((Original_DWT == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_DWT));
            }
            if ((Original_Sold == null)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((string)(Original_Sold));
            }
            if ((Original_PROwner == null)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((string)(Original_PROwner));
            }
            if ((Original_Owner == null)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((string)(Original_Owner));
            }
            if ((Original_Photofilename1 == null)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((string)(Original_Photofilename1));
            }
            if ((Original_Photofilename2 == null)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_Photofilename2));
            }
            if ((Original_PICID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((int)(Original_PICID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int ID, 
                    global::System.Nullable<int> OwnerGroup, 
                    string PresentName, 
                    string Shortcharacter, 
                    string IMONumber, 
                    string FBBtelephone, 
                    string FBBtelephoneShort, 
                    string FBBfacsimile, 
                    string InmFtelephone1, 
                    string InmFtelephone2, 
                    string InmFfacsimile, 
                    string InmCSATmail1, 
                    string InmCSATmail2, 
                    string email1, 
                    string email2, 
                    string LastUpdateforContacts, 
                    string PreviousName, 
                    string ExOwner, 
                    string Builder, 
                    string BuldersShipNumber, 
                    global::System.Nullable<global::System.DateTime> BuildYear, 
                    string Flag, 
                    string Classification, 
                    string TYPE, 
                    string LoA, 
                    string BTH, 
                    string DWT, 
                    string Sold, 
                    string PROwner, 
                    string Owner, 
                    string Photofilename1, 
                    string Photofilename2, 
                    global::System.Nullable<int> PICID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID));
            if ((OwnerGroup.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(OwnerGroup.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PresentName == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PresentName));
            }
            if ((Shortcharacter == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Shortcharacter));
            }
            if ((IMONumber == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(IMONumber));
            }
            if ((FBBtelephone == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(FBBtelephone));
            }
            if ((FBBtelephoneShort == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(FBBtelephoneShort));
            }
            if ((FBBfacsimile == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(FBBfacsimile));
            }
            if ((InmFtelephone1 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(InmFtelephone1));
            }
            if ((InmFtelephone2 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(InmFtelephone2));
            }
            if ((InmFfacsimile == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(InmFfacsimile));
            }
            if ((InmCSATmail1 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(InmCSATmail1));
            }
            if ((InmCSATmail2 == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(InmCSATmail2));
            }
            if ((email1 == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(email1));
            }
            if ((email2 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(email2));
            }
            if ((LastUpdateforContacts == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(LastUpdateforContacts));
            }
            if ((PreviousName == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(PreviousName));
            }
            if ((ExOwner == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(ExOwner));
            }
            if ((Builder == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Builder));
            }
            if ((BuldersShipNumber == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(BuldersShipNumber));
            }
            if ((BuildYear.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((System.DateTime)(BuildYear.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Flag == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(Flag));
            }
            if ((Classification == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Classification));
            }
            if ((TYPE == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(TYPE));
            }
            if ((LoA == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(LoA));
            }
            if ((BTH == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(BTH));
            }
            if ((DWT == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(DWT));
            }
            if ((Sold == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(Sold));
            }
            if ((PROwner == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(PROwner));
            }
            if ((Owner == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(Owner));
            }
            if ((Photofilename1 == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(Photofilename1));
            }
            if ((Photofilename2 == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(Photofilename2));
            }
            if ((PICID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((int)(PICID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID, 
                    global::System.Nullable<int> OwnerGroup, 
                    string PresentName, 
                    string Shortcharacter, 
                    string IMONumber, 
                    string FBBtelephone, 
                    string FBBtelephoneShort, 
                    string FBBfacsimile, 
                    string InmFtelephone1, 
                    string InmFtelephone2, 
                    string InmFfacsimile, 
                    string InmCSATmail1, 
                    string InmCSATmail2, 
                    string email1, 
                    string email2, 
                    string LastUpdateforContacts, 
                    string PreviousName, 
                    string ExOwner, 
                    string Builder, 
                    string BuldersShipNumber, 
                    global::System.Nullable<global::System.DateTime> BuildYear, 
                    string Flag, 
                    string Classification, 
                    string TYPE, 
                    string LoA, 
                    string BTH, 
                    string DWT, 
                    string Sold, 
                    string PROwner, 
                    string Owner, 
                    string Photofilename1, 
                    string Photofilename2, 
                    global::System.Nullable<int> PICID, 
                    int Original_ID, 
                    global::System.Nullable<int> Original_OwnerGroup, 
                    string Original_PresentName, 
                    string Original_Shortcharacter, 
                    string Original_IMONumber, 
                    string Original_FBBtelephone, 
                    string Original_FBBtelephoneShort, 
                    string Original_FBBfacsimile, 
                    string Original_InmFtelephone1, 
                    string Original_InmFtelephone2, 
                    string Original_InmFfacsimile, 
                    string Original_InmCSATmail1, 
                    string Original_InmCSATmail2, 
                    string Original_email1, 
                    string Original_email2, 
                    string Original_LastUpdateforContacts, 
                    string Original_PreviousName, 
                    string Original_ExOwner, 
                    string Original_Builder, 
                    string Original_BuldersShipNumber, 
                    global::System.Nullable<global::System.DateTime> Original_BuildYear, 
                    string Original_Flag, 
                    string Original_Classification, 
                    string Original_TYPE, 
                    string Original_LoA, 
                    string Original_BTH, 
                    string Original_DWT, 
                    string Original_Sold, 
                    string Original_PROwner, 
                    string Original_Owner, 
                    string Original_Photofilename1, 
                    string Original_Photofilename2, 
                    global::System.Nullable<int> Original_PICID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID));
            if ((OwnerGroup.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(OwnerGroup.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PresentName == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PresentName));
            }
            if ((Shortcharacter == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Shortcharacter));
            }
            if ((IMONumber == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(IMONumber));
            }
            if ((FBBtelephone == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(FBBtelephone));
            }
            if ((FBBtelephoneShort == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(FBBtelephoneShort));
            }
            if ((FBBfacsimile == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(FBBfacsimile));
            }
            if ((InmFtelephone1 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(InmFtelephone1));
            }
            if ((InmFtelephone2 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(InmFtelephone2));
            }
            if ((InmFfacsimile == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(InmFfacsimile));
            }
            if ((InmCSATmail1 == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(InmCSATmail1));
            }
            if ((InmCSATmail2 == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(InmCSATmail2));
            }
            if ((email1 == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(email1));
            }
            if ((email2 == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(email2));
            }
            if ((LastUpdateforContacts == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(LastUpdateforContacts));
            }
            if ((PreviousName == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(PreviousName));
            }
            if ((ExOwner == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(ExOwner));
            }
            if ((Builder == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Builder));
            }
            if ((BuldersShipNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(BuldersShipNumber));
            }
            if ((BuildYear.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(BuildYear.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Flag == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Flag));
            }
            if ((Classification == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Classification));
            }
            if ((TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(TYPE));
            }
            if ((LoA == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(LoA));
            }
            if ((BTH == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(BTH));
            }
            if ((DWT == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(DWT));
            }
            if ((Sold == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Sold));
            }
            if ((PROwner == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(PROwner));
            }
            if ((Owner == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Owner));
            }
            if ((Photofilename1 == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Photofilename1));
            }
            if ((Photofilename2 == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Photofilename2));
            }
            if ((PICID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(PICID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(Original_ID));
            if ((Original_OwnerGroup.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(Original_OwnerGroup.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_PresentName == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_PresentName));
            }
            if ((Original_Shortcharacter == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_Shortcharacter));
            }
            if ((Original_IMONumber == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_IMONumber));
            }
            if ((Original_FBBtelephone == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_FBBtelephone));
            }
            if ((Original_FBBtelephoneShort == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_FBBtelephoneShort));
            }
            if ((Original_FBBfacsimile == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_FBBfacsimile));
            }
            if ((Original_InmFtelephone1 == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_InmFtelephone1));
            }
            if ((Original_InmFtelephone2 == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_InmFtelephone2));
            }
            if ((Original_InmFfacsimile == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_InmFfacsimile));
            }
            if ((Original_InmCSATmail1 == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_InmCSATmail1));
            }
            if ((Original_InmCSATmail2 == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_InmCSATmail2));
            }
            if ((Original_email1 == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_email1));
            }
            if ((Original_email2 == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_email2));
            }
            if ((Original_LastUpdateforContacts == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_LastUpdateforContacts));
            }
            if ((Original_PreviousName == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_PreviousName));
            }
            if ((Original_ExOwner == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_ExOwner));
            }
            if ((Original_Builder == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_Builder));
            }
            if ((Original_BuldersShipNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Original_BuldersShipNumber));
            }
            if ((Original_BuildYear.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((System.DateTime)(Original_BuildYear.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_Flag == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_Flag));
            }
            if ((Original_Classification == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_Classification));
            }
            if ((Original_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_TYPE));
            }
            if ((Original_LoA == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_LoA));
            }
            if ((Original_BTH == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(Original_BTH));
            }
            if ((Original_DWT == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_DWT));
            }
            if ((Original_Sold == null)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(Original_Sold));
            }
            if ((Original_PROwner == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(Original_PROwner));
            }
            if ((Original_Owner == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(Original_Owner));
            }
            if ((Original_Photofilename1 == null)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(Original_Photofilename1));
            }
            if ((Original_Photofilename2 == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_Photofilename2));
            }
            if ((Original_PICID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((int)(Original_PICID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> OwnerGroup, 
                    string PresentName, 
                    string Shortcharacter, 
                    string IMONumber, 
                    string FBBtelephone, 
                    string FBBtelephoneShort, 
                    string FBBfacsimile, 
                    string InmFtelephone1, 
                    string InmFtelephone2, 
                    string InmFfacsimile, 
                    string InmCSATmail1, 
                    string InmCSATmail2, 
                    string email1, 
                    string email2, 
                    string LastUpdateforContacts, 
                    string PreviousName, 
                    string ExOwner, 
                    string Builder, 
                    string BuldersShipNumber, 
                    global::System.Nullable<global::System.DateTime> BuildYear, 
                    string Flag, 
                    string Classification, 
                    string TYPE, 
                    string LoA, 
                    string BTH, 
                    string DWT, 
                    string Sold, 
                    string PROwner, 
                    string Owner, 
                    string Photofilename1, 
                    string Photofilename2, 
                    global::System.Nullable<int> PICID, 
                    int Original_ID, 
                    global::System.Nullable<int> Original_OwnerGroup, 
                    string Original_PresentName, 
                    string Original_Shortcharacter, 
                    string Original_IMONumber, 
                    string Original_FBBtelephone, 
                    string Original_FBBtelephoneShort, 
                    string Original_FBBfacsimile, 
                    string Original_InmFtelephone1, 
                    string Original_InmFtelephone2, 
                    string Original_InmFfacsimile, 
                    string Original_InmCSATmail1, 
                    string Original_InmCSATmail2, 
                    string Original_email1, 
                    string Original_email2, 
                    string Original_LastUpdateforContacts, 
                    string Original_PreviousName, 
                    string Original_ExOwner, 
                    string Original_Builder, 
                    string Original_BuldersShipNumber, 
                    global::System.Nullable<global::System.DateTime> Original_BuildYear, 
                    string Original_Flag, 
                    string Original_Classification, 
                    string Original_TYPE, 
                    string Original_LoA, 
                    string Original_BTH, 
                    string Original_DWT, 
                    string Original_Sold, 
                    string Original_PROwner, 
                    string Original_Owner, 
                    string Original_Photofilename1, 
                    string Original_Photofilename2, 
                    global::System.Nullable<int> Original_PICID) {
            return this.Update(Original_ID, OwnerGroup, PresentName, Shortcharacter, IMONumber, FBBtelephone, FBBtelephoneShort, FBBfacsimile, InmFtelephone1, InmFtelephone2, InmFfacsimile, InmCSATmail1, InmCSATmail2, email1, email2, LastUpdateforContacts, PreviousName, ExOwner, Builder, BuldersShipNumber, BuildYear, Flag, Classification, TYPE, LoA, BTH, DWT, Sold, PROwner, Owner, Photofilename1, Photofilename2, PICID, Original_ID, Original_OwnerGroup, Original_PresentName, Original_Shortcharacter, Original_IMONumber, Original_FBBtelephone, Original_FBBtelephoneShort, Original_FBBfacsimile, Original_InmFtelephone1, Original_InmFtelephone2, Original_InmFfacsimile, Original_InmCSATmail1, Original_InmCSATmail2, Original_email1, Original_email2, Original_LastUpdateforContacts, Original_PreviousName, Original_ExOwner, Original_Builder, Original_BuldersShipNumber, Original_BuildYear, Original_Flag, Original_Classification, Original_TYPE, Original_LoA, Original_BTH, Original_DWT, Original_Sold, Original_PROwner, Original_Owner, Original_Photofilename1, Original_Photofilename2, Original_PICID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private General_fleet_attachGroup1TableAdapter _general_fleet_attachGroup1TableAdapter;
        
        private General_Fleet_informationTableAdapter _general_Fleet_informationTableAdapter;
        
        private Ship_Master_TBTableAdapter _ship_Master_TBTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public General_fleet_attachGroup1TableAdapter General_fleet_attachGroup1TableAdapter {
            get {
                return this._general_fleet_attachGroup1TableAdapter;
            }
            set {
                this._general_fleet_attachGroup1TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public General_Fleet_informationTableAdapter General_Fleet_informationTableAdapter {
            get {
                return this._general_Fleet_informationTableAdapter;
            }
            set {
                this._general_Fleet_informationTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Ship_Master_TBTableAdapter Ship_Master_TBTableAdapter {
            get {
                return this._ship_Master_TBTableAdapter;
            }
            set {
                this._ship_Master_TBTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._general_fleet_attachGroup1TableAdapter != null) 
                            && (this._general_fleet_attachGroup1TableAdapter.Connection != null))) {
                    return this._general_fleet_attachGroup1TableAdapter.Connection;
                }
                if (((this._general_Fleet_informationTableAdapter != null) 
                            && (this._general_Fleet_informationTableAdapter.Connection != null))) {
                    return this._general_Fleet_informationTableAdapter.Connection;
                }
                if (((this._ship_Master_TBTableAdapter != null) 
                            && (this._ship_Master_TBTableAdapter.Connection != null))) {
                    return this._ship_Master_TBTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._general_fleet_attachGroup1TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._general_Fleet_informationTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._ship_Master_TBTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(AZUREDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._ship_Master_TBTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Ship_Master_TB.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._ship_Master_TBTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._general_Fleet_informationTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.General_Fleet_information.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._general_Fleet_informationTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._general_fleet_attachGroup1TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.General_fleet_attachGroup1.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._general_fleet_attachGroup1TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(AZUREDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._ship_Master_TBTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Ship_Master_TB.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._ship_Master_TBTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._general_Fleet_informationTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.General_Fleet_information.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._general_Fleet_informationTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._general_fleet_attachGroup1TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.General_fleet_attachGroup1.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._general_fleet_attachGroup1TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(AZUREDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._general_fleet_attachGroup1TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.General_fleet_attachGroup1.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._general_fleet_attachGroup1TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._general_Fleet_informationTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.General_Fleet_information.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._general_Fleet_informationTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._ship_Master_TBTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Ship_Master_TB.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._ship_Master_TBTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(AZUREDBDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._general_fleet_attachGroup1TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._general_fleet_attachGroup1TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            if (((this._general_Fleet_informationTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._general_Fleet_informationTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            if (((this._ship_Master_TBTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._ship_Master_TBTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager には接続情報がありません。それぞれの TableAdapterManager TableAdapter プロパティを有効な" +
                        " TableAdapter インスタンスに設定してください。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("トランザクションを開始できません。現在のデータ接続がトランザクションをサポートしていないか、または現在の状態がトランザクションの開始を許可していません。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._general_fleet_attachGroup1TableAdapter != null)) {
                    revertConnections.Add(this._general_fleet_attachGroup1TableAdapter, this._general_fleet_attachGroup1TableAdapter.Connection);
                    this._general_fleet_attachGroup1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._general_fleet_attachGroup1TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._general_fleet_attachGroup1TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._general_fleet_attachGroup1TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._general_fleet_attachGroup1TableAdapter.Adapter);
                    }
                }
                if ((this._general_Fleet_informationTableAdapter != null)) {
                    revertConnections.Add(this._general_Fleet_informationTableAdapter, this._general_Fleet_informationTableAdapter.Connection);
                    this._general_Fleet_informationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._general_Fleet_informationTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._general_Fleet_informationTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._general_Fleet_informationTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._general_Fleet_informationTableAdapter.Adapter);
                    }
                }
                if ((this._ship_Master_TBTableAdapter != null)) {
                    revertConnections.Add(this._ship_Master_TBTableAdapter, this._ship_Master_TBTableAdapter.Connection);
                    this._ship_Master_TBTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._ship_Master_TBTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._ship_Master_TBTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._ship_Master_TBTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._ship_Master_TBTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._general_fleet_attachGroup1TableAdapter != null)) {
                    this._general_fleet_attachGroup1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._general_fleet_attachGroup1TableAdapter]));
                    this._general_fleet_attachGroup1TableAdapter.Transaction = null;
                }
                if ((this._general_Fleet_informationTableAdapter != null)) {
                    this._general_Fleet_informationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._general_Fleet_informationTableAdapter]));
                    this._general_Fleet_informationTableAdapter.Transaction = null;
                }
                if ((this._ship_Master_TBTableAdapter != null)) {
                    this._ship_Master_TBTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._ship_Master_TBTableAdapter]));
                    this._ship_Master_TBTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591